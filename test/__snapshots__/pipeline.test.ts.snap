// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot validation 1`] = `
AppStack {
  "_logicalIds": LogicalIDs {
    "renames": Object {},
    "reverse": Object {
      "myfunctiontestCurrentVersionE16E8D26": "myfunctiontestCurrentVersionE16E8D26",
    },
  },
  "_missingContext": Array [],
  "_stackDependencies": Object {},
  "_stackName": "test-stack",
  "_versionReportingEnabled": undefined,
  "account": "\${Token[AWS.AccountId.3]}",
  "artifactId": "test-stack",
  "environment": "aws://unknown-account/unknown-region",
  "node": ConstructNode {
    "_actualNode": Node {
      "_aspects": Array [],
      "_children": Object {
        "AssetParameters": Construct {
          "node": ConstructNode {
            "_actualNode": Node {
              "_aspects": Array [],
              "_children": Object {
                "70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05": FileAssetParameters {
                  "artifactHashParameter": CfnParameter {
                    "_allowedPattern": undefined,
                    "_allowedValues": undefined,
                    "_constraintDescription": undefined,
                    "_default": undefined,
                    "_description": "Artifact hash for asset \\"70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05\\"",
                    "_maxLength": undefined,
                    "_maxValue": undefined,
                    "_minLength": undefined,
                    "_minValue": undefined,
                    "_noEcho": undefined,
                    "_type": "String",
                    "logicalId": "\${Token[test-stack.AssetParameters.70071281480332679e8d...524c37e6c429d359b1380ed17ee4902f05.ArtifactHash.LogicalID.73]}",
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {},
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [
                          Object {
                            "data": "\${Token[test-stack.AssetParameters.70071281480332679e8d...524c37e6c429d359b1380ed17ee4902f05.ArtifactHash.LogicalID.73]}",
                            "trace": Array [
                              "new FileAssetParameters (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\private\\\\asset-parameters.ts:26:34)",
                              "LegacyStackSynthesizer.doAddFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:154:16)",
                              "LegacyStackSynthesizer.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:74:19)",
                              "AppStack.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack.ts:663:29)",
                              "LegacyStackSynthesizer.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:78:25)",
                              "new Asset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-s3-assets\\\\lib\\\\asset.ts:145:40)",
                              "AssetCode.bind (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\code.ts:277:20)",
                              "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:600:29)",
                              "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                              "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                              "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                              "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                              "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                              "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                              "new Promise (<anonymous>)",
                              "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                              "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                              "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                            ],
                            "type": "aws:cdk:logicalId",
                          },
                        ],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "ArtifactHash",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                  "bucketNameParameter": CfnParameter {
                    "_allowedPattern": undefined,
                    "_allowedValues": undefined,
                    "_constraintDescription": undefined,
                    "_default": undefined,
                    "_description": "S3 bucket for asset \\"70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05\\"",
                    "_maxLength": undefined,
                    "_maxValue": undefined,
                    "_minLength": undefined,
                    "_minValue": undefined,
                    "_noEcho": undefined,
                    "_type": "String",
                    "logicalId": "\${Token[test-stack.AssetParameters.70071281480332679e8d...9408524c37e6c429d359b1380ed17ee4902f05.S3Bucket.LogicalID.71]}",
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {},
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [
                          Object {
                            "data": "\${Token[test-stack.AssetParameters.70071281480332679e8d...9408524c37e6c429d359b1380ed17ee4902f05.S3Bucket.LogicalID.71]}",
                            "trace": Array [
                              "new FileAssetParameters (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\private\\\\asset-parameters.ts:16:32)",
                              "LegacyStackSynthesizer.doAddFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:154:16)",
                              "LegacyStackSynthesizer.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:74:19)",
                              "AppStack.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack.ts:663:29)",
                              "LegacyStackSynthesizer.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:78:25)",
                              "new Asset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-s3-assets\\\\lib\\\\asset.ts:145:40)",
                              "AssetCode.bind (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\code.ts:277:20)",
                              "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:600:29)",
                              "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                              "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                              "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                              "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                              "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                              "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                              "new Promise (<anonymous>)",
                              "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                              "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                              "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                            ],
                            "type": "aws:cdk:logicalId",
                          },
                        ],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "S3Bucket",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                  "node": ConstructNode {
                    "_actualNode": Node {
                      "_aspects": Array [],
                      "_children": Object {
                        "ArtifactHash": CfnParameter {
                          "_allowedPattern": undefined,
                          "_allowedValues": undefined,
                          "_constraintDescription": undefined,
                          "_default": undefined,
                          "_description": "Artifact hash for asset \\"70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05\\"",
                          "_maxLength": undefined,
                          "_maxValue": undefined,
                          "_minLength": undefined,
                          "_minValue": undefined,
                          "_noEcho": undefined,
                          "_type": "String",
                          "logicalId": "\${Token[test-stack.AssetParameters.70071281480332679e8d...524c37e6c429d359b1380ed17ee4902f05.ArtifactHash.LogicalID.73]}",
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.AssetParameters.70071281480332679e8d...524c37e6c429d359b1380ed17ee4902f05.ArtifactHash.LogicalID.73]}",
                                  "trace": Array [
                                    "new FileAssetParameters (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\private\\\\asset-parameters.ts:26:34)",
                                    "LegacyStackSynthesizer.doAddFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:154:16)",
                                    "LegacyStackSynthesizer.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:74:19)",
                                    "AppStack.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack.ts:663:29)",
                                    "LegacyStackSynthesizer.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:78:25)",
                                    "new Asset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-s3-assets\\\\lib\\\\asset.ts:145:40)",
                                    "AssetCode.bind (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\code.ts:277:20)",
                                    "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:600:29)",
                                    "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                                    "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                                    "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                    "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                    "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                    "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "ArtifactHash",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                        "S3Bucket": CfnParameter {
                          "_allowedPattern": undefined,
                          "_allowedValues": undefined,
                          "_constraintDescription": undefined,
                          "_default": undefined,
                          "_description": "S3 bucket for asset \\"70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05\\"",
                          "_maxLength": undefined,
                          "_maxValue": undefined,
                          "_minLength": undefined,
                          "_minValue": undefined,
                          "_noEcho": undefined,
                          "_type": "String",
                          "logicalId": "\${Token[test-stack.AssetParameters.70071281480332679e8d...9408524c37e6c429d359b1380ed17ee4902f05.S3Bucket.LogicalID.71]}",
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.AssetParameters.70071281480332679e8d...9408524c37e6c429d359b1380ed17ee4902f05.S3Bucket.LogicalID.71]}",
                                  "trace": Array [
                                    "new FileAssetParameters (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\private\\\\asset-parameters.ts:16:32)",
                                    "LegacyStackSynthesizer.doAddFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:154:16)",
                                    "LegacyStackSynthesizer.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:74:19)",
                                    "AppStack.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack.ts:663:29)",
                                    "LegacyStackSynthesizer.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:78:25)",
                                    "new Asset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-s3-assets\\\\lib\\\\asset.ts:145:40)",
                                    "AssetCode.bind (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\code.ts:277:20)",
                                    "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:600:29)",
                                    "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                                    "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                                    "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                    "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                    "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                    "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "S3Bucket",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                        "S3VersionKey": CfnParameter {
                          "_allowedPattern": undefined,
                          "_allowedValues": undefined,
                          "_constraintDescription": undefined,
                          "_default": undefined,
                          "_description": "S3 key for asset version \\"70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05\\"",
                          "_maxLength": undefined,
                          "_maxValue": undefined,
                          "_minLength": undefined,
                          "_minValue": undefined,
                          "_noEcho": undefined,
                          "_type": "String",
                          "logicalId": "\${Token[test-stack.AssetParameters.70071281480332679e8d...524c37e6c429d359b1380ed17ee4902f05.S3VersionKey.LogicalID.72]}",
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.AssetParameters.70071281480332679e8d...524c37e6c429d359b1380ed17ee4902f05.S3VersionKey.LogicalID.72]}",
                                  "trace": Array [
                                    "new FileAssetParameters (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\private\\\\asset-parameters.ts:21:31)",
                                    "LegacyStackSynthesizer.doAddFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:154:16)",
                                    "LegacyStackSynthesizer.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:74:19)",
                                    "AppStack.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack.ts:663:29)",
                                    "LegacyStackSynthesizer.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:78:25)",
                                    "new Asset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-s3-assets\\\\lib\\\\asset.ts:145:40)",
                                    "AssetCode.bind (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\code.ts:277:20)",
                                    "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:600:29)",
                                    "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                                    "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                                    "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                    "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                    "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                    "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "S3VersionKey",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": Object {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": Array [],
                      "_validations": Array [],
                      "host": [Circular],
                      "id": "70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05",
                      "invokedAspects": Array [],
                      "scope": [Circular],
                    },
                    "host": [Circular],
                  },
                  "objectKeyParameter": CfnParameter {
                    "_allowedPattern": undefined,
                    "_allowedValues": undefined,
                    "_constraintDescription": undefined,
                    "_default": undefined,
                    "_description": "S3 key for asset version \\"70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05\\"",
                    "_maxLength": undefined,
                    "_maxValue": undefined,
                    "_minLength": undefined,
                    "_minValue": undefined,
                    "_noEcho": undefined,
                    "_type": "String",
                    "logicalId": "\${Token[test-stack.AssetParameters.70071281480332679e8d...524c37e6c429d359b1380ed17ee4902f05.S3VersionKey.LogicalID.72]}",
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {},
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [
                          Object {
                            "data": "\${Token[test-stack.AssetParameters.70071281480332679e8d...524c37e6c429d359b1380ed17ee4902f05.S3VersionKey.LogicalID.72]}",
                            "trace": Array [
                              "new FileAssetParameters (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\private\\\\asset-parameters.ts:21:31)",
                              "LegacyStackSynthesizer.doAddFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:154:16)",
                              "LegacyStackSynthesizer.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:74:19)",
                              "AppStack.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack.ts:663:29)",
                              "LegacyStackSynthesizer.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:78:25)",
                              "new Asset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-s3-assets\\\\lib\\\\asset.ts:145:40)",
                              "AssetCode.bind (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\code.ts:277:20)",
                              "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:600:29)",
                              "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                              "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                              "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                              "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                              "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                              "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                              "new Promise (<anonymous>)",
                              "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                              "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                              "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                            ],
                            "type": "aws:cdk:logicalId",
                          },
                        ],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "S3VersionKey",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                  Symbol(@aws-cdk/core.DependableTrait): Object {
                    "dependencyRoots": Array [
                      [Circular],
                    ],
                  },
                },
              },
              "_context": Object {},
              "_dependencies": Set {},
              "_locked": false,
              "_metadata": Array [],
              "_validations": Array [],
              "host": [Circular],
              "id": "AssetParameters",
              "invokedAspects": Array [],
              "scope": [Circular],
            },
            "host": [Circular],
          },
          Symbol(@aws-cdk/core.DependableTrait): Object {
            "dependencyRoots": Array [
              [Circular],
            ],
          },
        },
        "my-function-test": LambdaPowerToolsFunction {
          "_allowCrossEnvironment": false,
          "_currentVersion": Version {
            "_allowCrossEnvironment": false,
            "_invocationGrants": Object {},
            "_physicalName": undefined,
            "canCreatePermissions": true,
            "env": Object {
              "account": "\${Token[AWS.AccountId.3]}",
              "region": "\${Token[AWS.Region.7]}",
            },
            "functionArn": "\${Token[TOKEN.95]}",
            "functionName": "\${Token[TOKEN.90]}:\${Token[TOKEN.94]}",
            "lambda": [Circular],
            "node": ConstructNode {
              "_actualNode": Node {
                "_aspects": Array [],
                "_children": Object {
                  "Resource": CfnVersion {
                    "_cfnProperties": Object {
                      "codeSha256": undefined,
                      "description": undefined,
                      "functionName": "\${Token[TOKEN.90]}",
                      "provisionedConcurrencyConfig": undefined,
                    },
                    "_logicalIdOverride": "\${Token[TOKEN.96]}",
                    "attrVersion": "\${Token[TOKEN.94]}",
                    "cfnOptions": Object {},
                    "cfnResourceType": "AWS::Lambda::Version",
                    "codeSha256": undefined,
                    "dependsOn": Set {},
                    "description": undefined,
                    "functionName": "\${Token[TOKEN.90]}",
                    "logicalId": "\${Token[test-stack.my-function-test.CurrentVersion.Resource.LogicalID.93]}",
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {},
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [
                          Object {
                            "data": "\${Token[test-stack.my-function-test.CurrentVersion.Resource.LogicalID.93]}",
                            "trace": Array [
                              "new Version (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\lambda-version.ts:187:21)",
                              "LambdaPowerToolsFunction.get currentVersion [as currentVersion] (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:364:28)",
                              "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:44:21)",
                              "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                              "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                              "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                              "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                              "new Promise (<anonymous>)",
                              "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                              "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                              "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                            ],
                            "type": "aws:cdk:logicalId",
                          },
                        ],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "Resource",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "provisionedConcurrencyConfig": undefined,
                    "rawOverrides": Object {},
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                },
                "_context": Object {},
                "_dependencies": Set {},
                "_locked": false,
                "_metadata": Array [],
                "_validations": Array [],
                "host": [Circular],
                "id": "CurrentVersion",
                "invokedAspects": Array [],
                "scope": [Circular],
              },
              "host": [Circular],
            },
            "permissionsNode": ConstructNode {
              "_actualNode": Node {
                "_aspects": Array [],
                "_children": Object {
                  "Resource": CfnVersion {
                    "_cfnProperties": Object {
                      "codeSha256": undefined,
                      "description": undefined,
                      "functionName": "\${Token[TOKEN.90]}",
                      "provisionedConcurrencyConfig": undefined,
                    },
                    "_logicalIdOverride": "\${Token[TOKEN.96]}",
                    "attrVersion": "\${Token[TOKEN.94]}",
                    "cfnOptions": Object {},
                    "cfnResourceType": "AWS::Lambda::Version",
                    "codeSha256": undefined,
                    "dependsOn": Set {},
                    "description": undefined,
                    "functionName": "\${Token[TOKEN.90]}",
                    "logicalId": "\${Token[test-stack.my-function-test.CurrentVersion.Resource.LogicalID.93]}",
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {},
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [
                          Object {
                            "data": "\${Token[test-stack.my-function-test.CurrentVersion.Resource.LogicalID.93]}",
                            "trace": Array [
                              "new Version (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\lambda-version.ts:187:21)",
                              "LambdaPowerToolsFunction.get currentVersion [as currentVersion] (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:364:28)",
                              "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:44:21)",
                              "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                              "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                              "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                              "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                              "new Promise (<anonymous>)",
                              "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                              "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                              "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                            ],
                            "type": "aws:cdk:logicalId",
                          },
                        ],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "Resource",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "provisionedConcurrencyConfig": undefined,
                    "rawOverrides": Object {},
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                },
                "_context": Object {},
                "_dependencies": Set {},
                "_locked": false,
                "_metadata": Array [],
                "_validations": Array [],
                "host": [Circular],
                "id": "CurrentVersion",
                "invokedAspects": Array [],
                "scope": [Circular],
              },
              "host": [Circular],
            },
            "physicalName": "\${Token[TOKEN.92]}",
            "qualifier": "\${Token[TOKEN.94]}",
            "stack": [Circular],
            "version": "\${Token[TOKEN.94]}",
            Symbol(@aws-cdk/core.DependableTrait): Object {
              "dependencyRoots": Array [
                [Circular],
              ],
            },
          },
          "_invocationGrants": Object {},
          "_physicalName": undefined,
          "alias": Alias {
            "_allowCrossEnvironment": true,
            "_invocationGrants": Object {},
            "_physicalName": "Current",
            "aliasName": "Current",
            "canCreatePermissions": true,
            "env": Object {
              "account": "\${Token[AWS.AccountId.3]}",
              "region": "\${Token[AWS.Region.7]}",
            },
            "functionArn": "\${Token[TOKEN.100]}",
            "functionName": "\${Token[TOKEN.109]}:Current",
            "lambda": [Circular],
            "node": ConstructNode {
              "_actualNode": Node {
                "_aspects": Array [],
                "_children": Object {
                  "Resource": CfnAlias {
                    "_cfnProperties": Object {
                      "description": undefined,
                      "functionName": "\${Token[TOKEN.90]}",
                      "functionVersion": "\${Token[TOKEN.94]}",
                      "name": "Current",
                      "provisionedConcurrencyConfig": undefined,
                      "routingConfig": undefined,
                    },
                    "cfnOptions": Object {},
                    "cfnResourceType": "AWS::Lambda::Alias",
                    "dependsOn": Set {},
                    "description": undefined,
                    "functionName": "\${Token[TOKEN.90]}",
                    "functionVersion": "\${Token[TOKEN.94]}",
                    "logicalId": "\${Token[test-stack.my-function-test.alias.Resource.LogicalID.97]}",
                    "name": "Current",
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {},
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [
                          Object {
                            "data": "\${Token[test-stack.my-function-test.alias.Resource.LogicalID.97]}",
                            "trace": Array [
                              "new Alias (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\alias.ts:148:19)",
                              "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:42:18)",
                              "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                              "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                              "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                              "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                              "new Promise (<anonymous>)",
                              "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                              "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                              "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                            ],
                            "type": "aws:cdk:logicalId",
                          },
                        ],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "Resource",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "provisionedConcurrencyConfig": undefined,
                    "rawOverrides": Object {},
                    "routingConfig": undefined,
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                  "ScalingRole": Import {
                    "_allowCrossEnvironment": false,
                    "_physicalName": undefined,
                    "assumeRoleAction": "sts:AssumeRole",
                    "attachedPolicies": AttachedPolicies {
                      "policies": Array [],
                    },
                    "env": Object {
                      "account": "\${Token[AWS.AccountId.3]}",
                      "region": "\${Token[AWS.Region.7]}",
                    },
                    "grantPrincipal": [Circular],
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {},
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "ScalingRole",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "physicalName": "\${Token[TOKEN.98]}",
                    "policyFragment": PrincipalPolicyFragment {
                      "conditions": Object {},
                      "principalJson": Object {
                        "AWS": Array [
                          "arn:\${Token[AWS.Partition.6]}:iam::\${Token[AWS.AccountId.3]}:role/aws-service-role/lambda.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency",
                        ],
                      },
                    },
                    "principalAccount": "\${Token[AWS.AccountId.3]}",
                    "roleArn": "arn:\${Token[AWS.Partition.6]}:iam::\${Token[AWS.AccountId.3]}:role/aws-service-role/lambda.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency",
                    "roleName": "AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency",
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                },
                "_context": Object {},
                "_dependencies": Set {},
                "_locked": false,
                "_metadata": Array [],
                "_validations": Array [],
                "host": [Circular],
                "id": "alias",
                "invokedAspects": Array [],
                "scope": [Circular],
              },
              "host": [Circular],
            },
            "permissionsNode": ConstructNode {
              "_actualNode": Node {
                "_aspects": Array [],
                "_children": Object {
                  "Resource": CfnAlias {
                    "_cfnProperties": Object {
                      "description": undefined,
                      "functionName": "\${Token[TOKEN.90]}",
                      "functionVersion": "\${Token[TOKEN.94]}",
                      "name": "Current",
                      "provisionedConcurrencyConfig": undefined,
                      "routingConfig": undefined,
                    },
                    "cfnOptions": Object {},
                    "cfnResourceType": "AWS::Lambda::Alias",
                    "dependsOn": Set {},
                    "description": undefined,
                    "functionName": "\${Token[TOKEN.90]}",
                    "functionVersion": "\${Token[TOKEN.94]}",
                    "logicalId": "\${Token[test-stack.my-function-test.alias.Resource.LogicalID.97]}",
                    "name": "Current",
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {},
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [
                          Object {
                            "data": "\${Token[test-stack.my-function-test.alias.Resource.LogicalID.97]}",
                            "trace": Array [
                              "new Alias (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\alias.ts:148:19)",
                              "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:42:18)",
                              "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                              "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                              "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                              "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                              "new Promise (<anonymous>)",
                              "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                              "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                              "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                            ],
                            "type": "aws:cdk:logicalId",
                          },
                        ],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "Resource",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "provisionedConcurrencyConfig": undefined,
                    "rawOverrides": Object {},
                    "routingConfig": undefined,
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                  "ScalingRole": Import {
                    "_allowCrossEnvironment": false,
                    "_physicalName": undefined,
                    "assumeRoleAction": "sts:AssumeRole",
                    "attachedPolicies": AttachedPolicies {
                      "policies": Array [],
                    },
                    "env": Object {
                      "account": "\${Token[AWS.AccountId.3]}",
                      "region": "\${Token[AWS.Region.7]}",
                    },
                    "grantPrincipal": [Circular],
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {},
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "ScalingRole",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "physicalName": "\${Token[TOKEN.98]}",
                    "policyFragment": PrincipalPolicyFragment {
                      "conditions": Object {},
                      "principalJson": Object {
                        "AWS": Array [
                          "arn:\${Token[AWS.Partition.6]}:iam::\${Token[AWS.AccountId.3]}:role/aws-service-role/lambda.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency",
                        ],
                      },
                    },
                    "principalAccount": "\${Token[AWS.AccountId.3]}",
                    "roleArn": "arn:\${Token[AWS.Partition.6]}:iam::\${Token[AWS.AccountId.3]}:role/aws-service-role/lambda.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency",
                    "roleName": "AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency",
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                },
                "_context": Object {},
                "_dependencies": Set {},
                "_locked": false,
                "_metadata": Array [],
                "_validations": Array [],
                "host": [Circular],
                "id": "alias",
                "invokedAspects": Array [],
                "scope": [Circular],
              },
              "host": [Circular],
            },
            "physicalName": "Current",
            "qualifier": "\${Token[TOKEN.102]}",
            "scalingRole": Import {
              "_allowCrossEnvironment": false,
              "_physicalName": undefined,
              "assumeRoleAction": "sts:AssumeRole",
              "attachedPolicies": AttachedPolicies {
                "policies": Array [],
              },
              "env": Object {
                "account": "\${Token[AWS.AccountId.3]}",
                "region": "\${Token[AWS.Region.7]}",
              },
              "grantPrincipal": [Circular],
              "node": ConstructNode {
                "_actualNode": Node {
                  "_aspects": Array [],
                  "_children": Object {},
                  "_context": Object {},
                  "_dependencies": Set {},
                  "_locked": false,
                  "_metadata": Array [],
                  "_validations": Array [],
                  "host": [Circular],
                  "id": "ScalingRole",
                  "invokedAspects": Array [],
                  "scope": [Circular],
                },
                "host": [Circular],
              },
              "physicalName": "\${Token[TOKEN.98]}",
              "policyFragment": PrincipalPolicyFragment {
                "conditions": Object {},
                "principalJson": Object {
                  "AWS": Array [
                    "arn:\${Token[AWS.Partition.6]}:iam::\${Token[AWS.AccountId.3]}:role/aws-service-role/lambda.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency",
                  ],
                },
              },
              "principalAccount": "\${Token[AWS.AccountId.3]}",
              "roleArn": "arn:\${Token[AWS.Partition.6]}:iam::\${Token[AWS.AccountId.3]}:role/aws-service-role/lambda.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency",
              "roleName": "AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency",
              "stack": [Circular],
              Symbol(@aws-cdk/core.DependableTrait): Object {
                "dependencyRoots": Array [
                  [Circular],
                ],
              },
            },
            "stack": [Circular],
            "version": Version {
              "_allowCrossEnvironment": false,
              "_invocationGrants": Object {},
              "_physicalName": undefined,
              "canCreatePermissions": true,
              "env": Object {
                "account": "\${Token[AWS.AccountId.3]}",
                "region": "\${Token[AWS.Region.7]}",
              },
              "functionArn": "\${Token[TOKEN.95]}",
              "functionName": "\${Token[TOKEN.90]}:\${Token[TOKEN.94]}",
              "lambda": [Circular],
              "node": ConstructNode {
                "_actualNode": Node {
                  "_aspects": Array [],
                  "_children": Object {
                    "Resource": CfnVersion {
                      "_cfnProperties": Object {
                        "codeSha256": undefined,
                        "description": undefined,
                        "functionName": "\${Token[TOKEN.90]}",
                        "provisionedConcurrencyConfig": undefined,
                      },
                      "_logicalIdOverride": "\${Token[TOKEN.96]}",
                      "attrVersion": "\${Token[TOKEN.94]}",
                      "cfnOptions": Object {},
                      "cfnResourceType": "AWS::Lambda::Version",
                      "codeSha256": undefined,
                      "dependsOn": Set {},
                      "description": undefined,
                      "functionName": "\${Token[TOKEN.90]}",
                      "logicalId": "\${Token[test-stack.my-function-test.CurrentVersion.Resource.LogicalID.93]}",
                      "node": ConstructNode {
                        "_actualNode": Node {
                          "_aspects": Array [],
                          "_children": Object {},
                          "_context": Object {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": Array [
                            Object {
                              "data": "\${Token[test-stack.my-function-test.CurrentVersion.Resource.LogicalID.93]}",
                              "trace": Array [
                                "new Version (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\lambda-version.ts:187:21)",
                                "LambdaPowerToolsFunction.get currentVersion [as currentVersion] (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:364:28)",
                                "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:44:21)",
                                "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                "new Promise (<anonymous>)",
                                "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                              ],
                              "type": "aws:cdk:logicalId",
                            },
                          ],
                          "_validations": Array [],
                          "host": [Circular],
                          "id": "Resource",
                          "invokedAspects": Array [],
                          "scope": [Circular],
                        },
                        "host": [Circular],
                      },
                      "provisionedConcurrencyConfig": undefined,
                      "rawOverrides": Object {},
                      "stack": [Circular],
                      Symbol(@aws-cdk/core.DependableTrait): Object {
                        "dependencyRoots": Array [
                          [Circular],
                        ],
                      },
                    },
                  },
                  "_context": Object {},
                  "_dependencies": Set {},
                  "_locked": false,
                  "_metadata": Array [],
                  "_validations": Array [],
                  "host": [Circular],
                  "id": "CurrentVersion",
                  "invokedAspects": Array [],
                  "scope": [Circular],
                },
                "host": [Circular],
              },
              "permissionsNode": ConstructNode {
                "_actualNode": Node {
                  "_aspects": Array [],
                  "_children": Object {
                    "Resource": CfnVersion {
                      "_cfnProperties": Object {
                        "codeSha256": undefined,
                        "description": undefined,
                        "functionName": "\${Token[TOKEN.90]}",
                        "provisionedConcurrencyConfig": undefined,
                      },
                      "_logicalIdOverride": "\${Token[TOKEN.96]}",
                      "attrVersion": "\${Token[TOKEN.94]}",
                      "cfnOptions": Object {},
                      "cfnResourceType": "AWS::Lambda::Version",
                      "codeSha256": undefined,
                      "dependsOn": Set {},
                      "description": undefined,
                      "functionName": "\${Token[TOKEN.90]}",
                      "logicalId": "\${Token[test-stack.my-function-test.CurrentVersion.Resource.LogicalID.93]}",
                      "node": ConstructNode {
                        "_actualNode": Node {
                          "_aspects": Array [],
                          "_children": Object {},
                          "_context": Object {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": Array [
                            Object {
                              "data": "\${Token[test-stack.my-function-test.CurrentVersion.Resource.LogicalID.93]}",
                              "trace": Array [
                                "new Version (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\lambda-version.ts:187:21)",
                                "LambdaPowerToolsFunction.get currentVersion [as currentVersion] (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:364:28)",
                                "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:44:21)",
                                "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                "new Promise (<anonymous>)",
                                "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                              ],
                              "type": "aws:cdk:logicalId",
                            },
                          ],
                          "_validations": Array [],
                          "host": [Circular],
                          "id": "Resource",
                          "invokedAspects": Array [],
                          "scope": [Circular],
                        },
                        "host": [Circular],
                      },
                      "provisionedConcurrencyConfig": undefined,
                      "rawOverrides": Object {},
                      "stack": [Circular],
                      Symbol(@aws-cdk/core.DependableTrait): Object {
                        "dependencyRoots": Array [
                          [Circular],
                        ],
                      },
                    },
                  },
                  "_context": Object {},
                  "_dependencies": Set {},
                  "_locked": false,
                  "_metadata": Array [],
                  "_validations": Array [],
                  "host": [Circular],
                  "id": "CurrentVersion",
                  "invokedAspects": Array [],
                  "scope": [Circular],
                },
                "host": [Circular],
              },
              "physicalName": "\${Token[TOKEN.92]}",
              "qualifier": "\${Token[TOKEN.94]}",
              "stack": [Circular],
              "version": "\${Token[TOKEN.94]}",
              Symbol(@aws-cdk/core.DependableTrait): Object {
                "dependencyRoots": Array [
                  [Circular],
                ],
              },
            },
            Symbol(@aws-cdk/core.DependableTrait): Object {
              "dependencyRoots": Array [
                [Circular],
              ],
            },
          },
          "canCreatePermissions": true,
          "currentVersionOptions": undefined,
          "deadLetterQueue": undefined,
          "env": Object {
            "account": "\${Token[AWS.AccountId.3]}",
            "region": "\${Token[AWS.Region.7]}",
          },
          "environment": Object {
            "LOG_LEVEL": Object {
              "value": "INFO",
            },
            "POWERTOOLS_SERVICE_NAME": Object {
              "value": "druid-construct-function",
            },
          },
          "functionArn": "\${Token[TOKEN.91]}",
          "functionName": "\${Token[TOKEN.90]}",
          "grantPrincipal": Role {
            "_allowCrossEnvironment": false,
            "_physicalName": undefined,
            "assumeRoleAction": "sts:AssumeRole",
            "assumeRolePolicy": Object {
              "Statement": Array [
                Object {
                  "Action": "sts:AssumeRole",
                  "Effect": "Allow",
                  "Principal": Object {
                    "Service": "\${Token[lambda.amazonaws.com.63]}",
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "attachedPolicies": AttachedPolicies {
              "policies": Array [
                Policy {
                  "_allowCrossEnvironment": false,
                  "_physicalName": "\${Token[TOKEN.82]}",
                  "_policyName": "\${Token[TOKEN.82]}",
                  "document": Object {
                    "Statement": Array [
                      Object {
                        "Action": Array [
                          "xray:PutTraceSegments",
                          "xray:PutTelemetryRecords",
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                      },
                    ],
                    "Version": "2012-10-17",
                  },
                  "env": Object {
                    "account": "\${Token[AWS.AccountId.3]}",
                    "region": "\${Token[AWS.Region.7]}",
                  },
                  "force": false,
                  "groups": Array [],
                  "node": ConstructNode {
                    "_actualNode": Node {
                      "_aspects": Array [],
                      "_children": Object {
                        "Resource": CfnPolicyConditional {
                          "_cfnProperties": Object {
                            "groups": Array [
                              "#{Token[TOKEN.85]}",
                            ],
                            "policyDocument": Object {
                              "Statement": Array [
                                Object {
                                  "Action": Array [
                                    "xray:PutTraceSegments",
                                    "xray:PutTelemetryRecords",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "policyName": "\${Token[TOKEN.82]}",
                            "roles": Array [
                              "#{Token[TOKEN.83]}",
                            ],
                            "users": Array [
                              "#{Token[TOKEN.84]}",
                            ],
                          },
                          "cfnOptions": Object {},
                          "cfnResourceType": "AWS::IAM::Policy",
                          "dependsOn": Set {},
                          "groups": Array [
                            "#{Token[TOKEN.85]}",
                          ],
                          "logicalId": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                                  "trace": Array [
                                    "new Policy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\policy.ts:154:22)",
                                    "Role.addToPrincipalPolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\role.ts:367:28)",
                                    "LambdaPowerToolsFunction.addToRolePolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function-base.ts:264:15)",
                                    "LambdaPowerToolsFunction.buildTracingConfig (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:983:10)",
                                    "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:664:27)",
                                    "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                                    "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                                    "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                    "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                    "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                    "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "Resource",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "policyDocument": Object {
                            "Statement": Array [
                              Object {
                                "Action": Array [
                                  "xray:PutTraceSegments",
                                  "xray:PutTelemetryRecords",
                                ],
                                "Effect": "Allow",
                                "Resource": "*",
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "policyName": "\${Token[TOKEN.82]}",
                          "rawOverrides": Object {},
                          "roles": Array [
                            "#{Token[TOKEN.83]}",
                          ],
                          "stack": [Circular],
                          "users": Array [
                            "#{Token[TOKEN.84]}",
                          ],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": Object {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": Array [],
                      "_validations": Array [],
                      "host": [Circular],
                      "id": "DefaultPolicy",
                      "invokedAspects": Array [],
                      "scope": [Circular],
                    },
                    "host": [Circular],
                  },
                  "physicalName": "\${Token[TOKEN.82]}",
                  "referenceTaken": false,
                  "roles": Array [
                    [Circular],
                  ],
                  "stack": [Circular],
                  "users": Array [],
                  Symbol(@aws-cdk/core.DependableTrait): Object {
                    "dependencyRoots": Array [
                      [Circular],
                    ],
                  },
                },
              ],
            },
            "defaultPolicy": Policy {
              "_allowCrossEnvironment": false,
              "_physicalName": "\${Token[TOKEN.82]}",
              "_policyName": "\${Token[TOKEN.82]}",
              "document": Object {
                "Statement": Array [
                  Object {
                    "Action": Array [
                      "xray:PutTraceSegments",
                      "xray:PutTelemetryRecords",
                    ],
                    "Effect": "Allow",
                    "Resource": "*",
                  },
                ],
                "Version": "2012-10-17",
              },
              "env": Object {
                "account": "\${Token[AWS.AccountId.3]}",
                "region": "\${Token[AWS.Region.7]}",
              },
              "force": false,
              "groups": Array [],
              "node": ConstructNode {
                "_actualNode": Node {
                  "_aspects": Array [],
                  "_children": Object {
                    "Resource": CfnPolicyConditional {
                      "_cfnProperties": Object {
                        "groups": Array [
                          "#{Token[TOKEN.85]}",
                        ],
                        "policyDocument": Object {
                          "Statement": Array [
                            Object {
                              "Action": Array [
                                "xray:PutTraceSegments",
                                "xray:PutTelemetryRecords",
                              ],
                              "Effect": "Allow",
                              "Resource": "*",
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "policyName": "\${Token[TOKEN.82]}",
                        "roles": Array [
                          "#{Token[TOKEN.83]}",
                        ],
                        "users": Array [
                          "#{Token[TOKEN.84]}",
                        ],
                      },
                      "cfnOptions": Object {},
                      "cfnResourceType": "AWS::IAM::Policy",
                      "dependsOn": Set {},
                      "groups": Array [
                        "#{Token[TOKEN.85]}",
                      ],
                      "logicalId": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                      "node": ConstructNode {
                        "_actualNode": Node {
                          "_aspects": Array [],
                          "_children": Object {},
                          "_context": Object {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": Array [
                            Object {
                              "data": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                              "trace": Array [
                                "new Policy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\policy.ts:154:22)",
                                "Role.addToPrincipalPolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\role.ts:367:28)",
                                "LambdaPowerToolsFunction.addToRolePolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function-base.ts:264:15)",
                                "LambdaPowerToolsFunction.buildTracingConfig (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:983:10)",
                                "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:664:27)",
                                "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                                "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                                "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                "new Promise (<anonymous>)",
                                "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                              ],
                              "type": "aws:cdk:logicalId",
                            },
                          ],
                          "_validations": Array [],
                          "host": [Circular],
                          "id": "Resource",
                          "invokedAspects": Array [],
                          "scope": [Circular],
                        },
                        "host": [Circular],
                      },
                      "policyDocument": Object {
                        "Statement": Array [
                          Object {
                            "Action": Array [
                              "xray:PutTraceSegments",
                              "xray:PutTelemetryRecords",
                            ],
                            "Effect": "Allow",
                            "Resource": "*",
                          },
                        ],
                        "Version": "2012-10-17",
                      },
                      "policyName": "\${Token[TOKEN.82]}",
                      "rawOverrides": Object {},
                      "roles": Array [
                        "#{Token[TOKEN.83]}",
                      ],
                      "stack": [Circular],
                      "users": Array [
                        "#{Token[TOKEN.84]}",
                      ],
                      Symbol(@aws-cdk/core.DependableTrait): Object {
                        "dependencyRoots": Array [
                          [Circular],
                        ],
                      },
                    },
                  },
                  "_context": Object {},
                  "_dependencies": Set {},
                  "_locked": false,
                  "_metadata": Array [],
                  "_validations": Array [],
                  "host": [Circular],
                  "id": "DefaultPolicy",
                  "invokedAspects": Array [],
                  "scope": [Circular],
                },
                "host": [Circular],
              },
              "physicalName": "\${Token[TOKEN.82]}",
              "referenceTaken": false,
              "roles": Array [
                [Circular],
              ],
              "stack": [Circular],
              "users": Array [],
              Symbol(@aws-cdk/core.DependableTrait): Object {
                "dependencyRoots": Array [
                  [Circular],
                ],
              },
            },
            "env": Object {
              "account": "\${Token[AWS.AccountId.3]}",
              "region": "\${Token[AWS.Region.7]}",
            },
            "grantPrincipal": [Circular],
            "inlinePolicies": Object {},
            "managedPolicies": Array [
              AwsManagedPolicy {
                "managedPolicyArn": "\${Token[TOKEN.61]}",
              },
            ],
            "node": ConstructNode {
              "_actualNode": Node {
                "_aspects": Array [],
                "_children": Object {
                  "DefaultPolicy": Policy {
                    "_allowCrossEnvironment": false,
                    "_physicalName": "\${Token[TOKEN.82]}",
                    "_policyName": "\${Token[TOKEN.82]}",
                    "document": Object {
                      "Statement": Array [
                        Object {
                          "Action": Array [
                            "xray:PutTraceSegments",
                            "xray:PutTelemetryRecords",
                          ],
                          "Effect": "Allow",
                          "Resource": "*",
                        },
                      ],
                      "Version": "2012-10-17",
                    },
                    "env": Object {
                      "account": "\${Token[AWS.AccountId.3]}",
                      "region": "\${Token[AWS.Region.7]}",
                    },
                    "force": false,
                    "groups": Array [],
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {
                          "Resource": CfnPolicyConditional {
                            "_cfnProperties": Object {
                              "groups": Array [
                                "#{Token[TOKEN.85]}",
                              ],
                              "policyDocument": Object {
                                "Statement": Array [
                                  Object {
                                    "Action": Array [
                                      "xray:PutTraceSegments",
                                      "xray:PutTelemetryRecords",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "policyName": "\${Token[TOKEN.82]}",
                              "roles": Array [
                                "#{Token[TOKEN.83]}",
                              ],
                              "users": Array [
                                "#{Token[TOKEN.84]}",
                              ],
                            },
                            "cfnOptions": Object {},
                            "cfnResourceType": "AWS::IAM::Policy",
                            "dependsOn": Set {},
                            "groups": Array [
                              "#{Token[TOKEN.85]}",
                            ],
                            "logicalId": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                            "node": ConstructNode {
                              "_actualNode": Node {
                                "_aspects": Array [],
                                "_children": Object {},
                                "_context": Object {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": Array [
                                  Object {
                                    "data": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                                    "trace": Array [
                                      "new Policy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\policy.ts:154:22)",
                                      "Role.addToPrincipalPolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\role.ts:367:28)",
                                      "LambdaPowerToolsFunction.addToRolePolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function-base.ts:264:15)",
                                      "LambdaPowerToolsFunction.buildTracingConfig (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:983:10)",
                                      "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:664:27)",
                                      "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                                      "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                                      "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                      "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                      "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                      "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                      "new Promise (<anonymous>)",
                                      "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                      "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                      "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                    ],
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": Array [],
                                "host": [Circular],
                                "id": "Resource",
                                "invokedAspects": Array [],
                                "scope": [Circular],
                              },
                              "host": [Circular],
                            },
                            "policyDocument": Object {
                              "Statement": Array [
                                Object {
                                  "Action": Array [
                                    "xray:PutTraceSegments",
                                    "xray:PutTelemetryRecords",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "policyName": "\${Token[TOKEN.82]}",
                            "rawOverrides": Object {},
                            "roles": Array [
                              "#{Token[TOKEN.83]}",
                            ],
                            "stack": [Circular],
                            "users": Array [
                              "#{Token[TOKEN.84]}",
                            ],
                            Symbol(@aws-cdk/core.DependableTrait): Object {
                              "dependencyRoots": Array [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "DefaultPolicy",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "physicalName": "\${Token[TOKEN.82]}",
                    "referenceTaken": false,
                    "roles": Array [
                      [Circular],
                    ],
                    "stack": [Circular],
                    "users": Array [],
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                  "Resource": CfnRole {
                    "_cfnProperties": Object {
                      "assumeRolePolicyDocument": Object {
                        "Statement": Array [
                          Object {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": Object {
                              "Service": "\${Token[lambda.amazonaws.com.63]}",
                            },
                          },
                        ],
                        "Version": "2012-10-17",
                      },
                      "description": undefined,
                      "managedPolicyArns": Array [
                        "#{Token[TOKEN.64]}",
                      ],
                      "maxSessionDuration": undefined,
                      "path": undefined,
                      "permissionsBoundary": undefined,
                      "policies": undefined,
                      "roleName": "\${Token[TOKEN.62]}",
                    },
                    "assumeRolePolicyDocument": Object {
                      "Statement": Array [
                        Object {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": Object {
                            "Service": "\${Token[lambda.amazonaws.com.63]}",
                          },
                        },
                      ],
                      "Version": "2012-10-17",
                    },
                    "attrArn": "\${Token[TOKEN.66]}",
                    "attrRoleId": "\${Token[TOKEN.67]}",
                    "cfnOptions": Object {},
                    "cfnResourceType": "AWS::IAM::Role",
                    "dependsOn": Set {},
                    "description": undefined,
                    "logicalId": "\${Token[test-stack.my-function-test.ServiceRole.Resource.LogicalID.65]}",
                    "managedPolicyArns": Array [
                      "#{Token[TOKEN.64]}",
                    ],
                    "maxSessionDuration": undefined,
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {},
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [
                          Object {
                            "data": "\${Token[test-stack.my-function-test.ServiceRole.Resource.LogicalID.65]}",
                            "trace": Array [
                              "new Role (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\role.ts:326:18)",
                              "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:580:31)",
                              "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                              "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                              "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                              "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                              "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                              "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                              "new Promise (<anonymous>)",
                              "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                              "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                              "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                            ],
                            "type": "aws:cdk:logicalId",
                          },
                        ],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "Resource",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "path": undefined,
                    "permissionsBoundary": undefined,
                    "policies": undefined,
                    "rawOverrides": Object {},
                    "roleName": "\${Token[TOKEN.62]}",
                    "stack": [Circular],
                    "tags": TagManager {
                      "initialTagPriority": 50,
                      "priorities": Map {},
                      "resourceTypeName": "AWS::IAM::Role",
                      "tagFormatter": StandardFormatter {},
                      "tagPropertyName": "tags",
                      "tags": Map {},
                    },
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                },
                "_context": Object {},
                "_dependencies": Set {},
                "_locked": false,
                "_metadata": Array [],
                "_validations": Array [],
                "host": [Circular],
                "id": "ServiceRole",
                "invokedAspects": Array [],
                "scope": [Circular],
              },
              "host": [Circular],
            },
            "permissionsBoundary": undefined,
            "physicalName": "\${Token[TOKEN.62]}",
            "policyFragment": PrincipalPolicyFragment {
              "conditions": Object {},
              "principalJson": Object {
                "AWS": Array [
                  "\${Token[TOKEN.68]}",
                ],
              },
            },
            "principalAccount": "\${Token[AWS.AccountId.3]}",
            "roleArn": "\${Token[TOKEN.68]}",
            "roleId": "\${Token[TOKEN.67]}",
            "roleName": "\${Token[TOKEN.70]}",
            "stack": [Circular],
            Symbol(@aws-cdk/core.DependableTrait): Object {
              "dependencyRoots": Array [
                [Circular],
              ],
            },
          },
          "layers": Array [],
          "node": ConstructNode {
            "_actualNode": Node {
              "_aspects": Array [],
              "_children": Object {
                "Code": Asset {
                  "assetHash": "70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05",
                  "assetPath": "asset.70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05",
                  "bucket": Import {
                    "_allowCrossEnvironment": false,
                    "_physicalName": undefined,
                    "autoCreatePolicy": false,
                    "bucketArn": "arn:\${Token[AWS.Partition.6]}:s3:::\${Token[TOKEN.74]}",
                    "bucketDomainName": "\${Token[TOKEN.74]}.s3.\${Token[AWS.URLSuffix.4]}",
                    "bucketDualStackDomainName": "\${Token[TOKEN.74]}.s3.dualstack.\${Token[AWS.Region.7]}.\${Token[AWS.URLSuffix.4]}",
                    "bucketName": "\${Token[TOKEN.74]}",
                    "bucketRegionalDomainName": "\${Token[TOKEN.74]}.s3.\${Token[AWS.Region.7]}.\${Token[AWS.URLSuffix.4]}",
                    "bucketWebsiteDomainName": "\${Token[TOKEN.74]}.s3-website-\${Token[AWS.Region.7]}.\${Token[AWS.URLSuffix.4]}",
                    "bucketWebsiteNewUrlFormat": false,
                    "bucketWebsiteUrl": "http://\${Token[TOKEN.74]}.s3-website-\${Token[AWS.Region.7]}.\${Token[AWS.URLSuffix.4]}",
                    "disallowPublicAccess": false,
                    "encryptionKey": undefined,
                    "env": Object {
                      "account": "\${Token[AWS.AccountId.3]}",
                      "region": "\${Token[AWS.Region.7]}",
                    },
                    "isWebsite": false,
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {},
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "AssetBucket",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "physicalName": "\${Token[TOKEN.80]}",
                    "policy": undefined,
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                  "httpUrl": "https://s3.\${Token[AWS.Region.7]}.\${Token[AWS.URLSuffix.4]}/\${Token[TOKEN.74]}/\${Token[TOKEN.77]}\${Token[TOKEN.79]}",
                  "isFile": false,
                  "isZipArchive": true,
                  "node": ConstructNode {
                    "_actualNode": Node {
                      "_aspects": Array [],
                      "_children": Object {
                        "AssetBucket": Import {
                          "_allowCrossEnvironment": false,
                          "_physicalName": undefined,
                          "autoCreatePolicy": false,
                          "bucketArn": "arn:\${Token[AWS.Partition.6]}:s3:::\${Token[TOKEN.74]}",
                          "bucketDomainName": "\${Token[TOKEN.74]}.s3.\${Token[AWS.URLSuffix.4]}",
                          "bucketDualStackDomainName": "\${Token[TOKEN.74]}.s3.dualstack.\${Token[AWS.Region.7]}.\${Token[AWS.URLSuffix.4]}",
                          "bucketName": "\${Token[TOKEN.74]}",
                          "bucketRegionalDomainName": "\${Token[TOKEN.74]}.s3.\${Token[AWS.Region.7]}.\${Token[AWS.URLSuffix.4]}",
                          "bucketWebsiteDomainName": "\${Token[TOKEN.74]}.s3-website-\${Token[AWS.Region.7]}.\${Token[AWS.URLSuffix.4]}",
                          "bucketWebsiteNewUrlFormat": false,
                          "bucketWebsiteUrl": "http://\${Token[TOKEN.74]}.s3-website-\${Token[AWS.Region.7]}.\${Token[AWS.URLSuffix.4]}",
                          "disallowPublicAccess": false,
                          "encryptionKey": undefined,
                          "env": Object {
                            "account": "\${Token[AWS.AccountId.3]}",
                            "region": "\${Token[AWS.Region.7]}",
                          },
                          "isWebsite": false,
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "AssetBucket",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "physicalName": "\${Token[TOKEN.80]}",
                          "policy": undefined,
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                        "Stage": AssetStaging {
                          "absoluteStagedPath": "C:\\\\Users\\\\geyso\\\\AppData\\\\Local\\\\Temp\\\\cdk.outC2WeRE\\\\asset.70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05",
                          "assetHash": "70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05",
                          "assetOutdir": "C:\\\\Users\\\\geyso\\\\AppData\\\\Local\\\\Temp\\\\cdk.outC2WeRE",
                          "cacheKey": "916e2eddd69fcf1c5bc016d0c405e57d53d7af9e46f9c7a440e21bcb6ad4a38f",
                          "customSourceFingerprint": undefined,
                          "fingerprintOptions": Object {
                            "assetHash": undefined,
                            "assetHashType": undefined,
                            "bundling": Object {
                              "command": Array [
                                "bash",
                                "-c",
                                "rsync -r /var/dependencies/. /asset-output/. && rsync -r . /asset-output/.",
                              ],
                              "image": "43f91ef871f412d67a906839ea969ecedbfa022c71a8b6a627621e4e04a292ca",
                            },
                            "exclude": Array [
                              "*.pyc",
                            ],
                            "follow": undefined,
                            "path": "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\lambda-handler-poetry",
                            "sourcePath": "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\lambda-handler-poetry",
                          },
                          "hashType": "source",
                          "isArchive": true,
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "Stage",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "packaging": "zip",
                          "sourcePath": "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\lambda-handler-poetry",
                          "sourceStats": Stats {
                            "atime": 2021-05-26T20:13:05.756Z,
                            "atimeMs": 1622059985755.8203,
                            "birthtime": 2021-05-26T14:31:05.330Z,
                            "birthtimeMs": 1622039465330.4805,
                            "blksize": 4096,
                            "blocks": 0,
                            "ctime": 2021-05-26T14:32:15.272Z,
                            "ctimeMs": 1622039535271.8657,
                            "dev": 509626933,
                            "gid": 0,
                            "ino": 3659174699168474,
                            "mode": 16822,
                            "mtime": 2021-05-26T14:31:44.159Z,
                            "mtimeMs": 1622039504159.0552,
                            "nlink": 1,
                            "rdev": 0,
                            "size": 0,
                            "uid": 0,
                          },
                          "stagedPath": "C:\\\\Users\\\\geyso\\\\AppData\\\\Local\\\\Temp\\\\cdk.outC2WeRE\\\\asset.70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05",
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": Object {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": Array [],
                      "_validations": Array [],
                      "host": [Circular],
                      "id": "Code",
                      "invokedAspects": Array [],
                      "scope": [Circular],
                    },
                    "host": [Circular],
                  },
                  "s3BucketName": "\${Token[TOKEN.74]}",
                  "s3ObjectKey": "\${Token[TOKEN.77]}\${Token[TOKEN.79]}",
                  "s3ObjectUrl": "s3://\${Token[TOKEN.74]}/\${Token[TOKEN.77]}\${Token[TOKEN.79]}",
                  "s3Url": "https://s3.\${Token[AWS.Region.7]}.\${Token[AWS.URLSuffix.4]}/\${Token[TOKEN.74]}/\${Token[TOKEN.77]}\${Token[TOKEN.79]}",
                  "sourceHash": "70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05",
                  Symbol(@aws-cdk/core.DependableTrait): Object {
                    "dependencyRoots": Array [
                      [Circular],
                    ],
                  },
                },
                "CurrentVersion": Version {
                  "_allowCrossEnvironment": false,
                  "_invocationGrants": Object {},
                  "_physicalName": undefined,
                  "canCreatePermissions": true,
                  "env": Object {
                    "account": "\${Token[AWS.AccountId.3]}",
                    "region": "\${Token[AWS.Region.7]}",
                  },
                  "functionArn": "\${Token[TOKEN.95]}",
                  "functionName": "\${Token[TOKEN.90]}:\${Token[TOKEN.94]}",
                  "lambda": [Circular],
                  "node": ConstructNode {
                    "_actualNode": Node {
                      "_aspects": Array [],
                      "_children": Object {
                        "Resource": CfnVersion {
                          "_cfnProperties": Object {
                            "codeSha256": undefined,
                            "description": undefined,
                            "functionName": "\${Token[TOKEN.90]}",
                            "provisionedConcurrencyConfig": undefined,
                          },
                          "_logicalIdOverride": "\${Token[TOKEN.96]}",
                          "attrVersion": "\${Token[TOKEN.94]}",
                          "cfnOptions": Object {},
                          "cfnResourceType": "AWS::Lambda::Version",
                          "codeSha256": undefined,
                          "dependsOn": Set {},
                          "description": undefined,
                          "functionName": "\${Token[TOKEN.90]}",
                          "logicalId": "\${Token[test-stack.my-function-test.CurrentVersion.Resource.LogicalID.93]}",
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.my-function-test.CurrentVersion.Resource.LogicalID.93]}",
                                  "trace": Array [
                                    "new Version (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\lambda-version.ts:187:21)",
                                    "LambdaPowerToolsFunction.get currentVersion [as currentVersion] (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:364:28)",
                                    "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:44:21)",
                                    "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                    "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                    "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                    "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "Resource",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "provisionedConcurrencyConfig": undefined,
                          "rawOverrides": Object {},
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": Object {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": Array [],
                      "_validations": Array [],
                      "host": [Circular],
                      "id": "CurrentVersion",
                      "invokedAspects": Array [],
                      "scope": [Circular],
                    },
                    "host": [Circular],
                  },
                  "permissionsNode": ConstructNode {
                    "_actualNode": Node {
                      "_aspects": Array [],
                      "_children": Object {
                        "Resource": CfnVersion {
                          "_cfnProperties": Object {
                            "codeSha256": undefined,
                            "description": undefined,
                            "functionName": "\${Token[TOKEN.90]}",
                            "provisionedConcurrencyConfig": undefined,
                          },
                          "_logicalIdOverride": "\${Token[TOKEN.96]}",
                          "attrVersion": "\${Token[TOKEN.94]}",
                          "cfnOptions": Object {},
                          "cfnResourceType": "AWS::Lambda::Version",
                          "codeSha256": undefined,
                          "dependsOn": Set {},
                          "description": undefined,
                          "functionName": "\${Token[TOKEN.90]}",
                          "logicalId": "\${Token[test-stack.my-function-test.CurrentVersion.Resource.LogicalID.93]}",
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.my-function-test.CurrentVersion.Resource.LogicalID.93]}",
                                  "trace": Array [
                                    "new Version (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\lambda-version.ts:187:21)",
                                    "LambdaPowerToolsFunction.get currentVersion [as currentVersion] (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:364:28)",
                                    "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:44:21)",
                                    "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                    "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                    "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                    "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "Resource",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "provisionedConcurrencyConfig": undefined,
                          "rawOverrides": Object {},
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": Object {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": Array [],
                      "_validations": Array [],
                      "host": [Circular],
                      "id": "CurrentVersion",
                      "invokedAspects": Array [],
                      "scope": [Circular],
                    },
                    "host": [Circular],
                  },
                  "physicalName": "\${Token[TOKEN.92]}",
                  "qualifier": "\${Token[TOKEN.94]}",
                  "stack": [Circular],
                  "version": "\${Token[TOKEN.94]}",
                  Symbol(@aws-cdk/core.DependableTrait): Object {
                    "dependencyRoots": Array [
                      [Circular],
                    ],
                  },
                },
                "Resource": CfnFunction {
                  "_cfnProperties": Object {
                    "code": Object {
                      "imageUri": undefined,
                      "s3Bucket": "\${Token[TOKEN.74]}",
                      "s3Key": "\${Token[TOKEN.77]}\${Token[TOKEN.79]}",
                      "s3ObjectVersion": undefined,
                      "zipFile": undefined,
                    },
                    "codeSigningConfigArn": undefined,
                    "deadLetterConfig": undefined,
                    "description": undefined,
                    "environment": "<unresolved-lazy>",
                    "fileSystemConfigs": undefined,
                    "functionName": "\${Token[TOKEN.60]}",
                    "handler": "index.handler",
                    "imageConfig": undefined,
                    "kmsKeyArn": undefined,
                    "layers": Array [
                      "#{Token[TOKEN.81]}",
                    ],
                    "memorySize": undefined,
                    "packageType": undefined,
                    "reservedConcurrentExecutions": undefined,
                    "role": "\${Token[TOKEN.68]}",
                    "runtime": "python3.8",
                    "timeout": 5,
                    "tracingConfig": Object {
                      "mode": "Active",
                    },
                    "vpcConfig": undefined,
                  },
                  "attrArn": "\${Token[TOKEN.88]}",
                  "cfnOptions": Object {},
                  "cfnResourceType": "AWS::Lambda::Function",
                  "code": Object {
                    "imageUri": undefined,
                    "s3Bucket": "\${Token[TOKEN.74]}",
                    "s3Key": "\${Token[TOKEN.77]}\${Token[TOKEN.79]}",
                    "s3ObjectVersion": undefined,
                    "zipFile": undefined,
                  },
                  "codeSigningConfigArn": undefined,
                  "deadLetterConfig": undefined,
                  "dependsOn": Set {},
                  "description": undefined,
                  "environment": "<unresolved-lazy>",
                  "fileSystemConfigs": undefined,
                  "functionName": "\${Token[TOKEN.60]}",
                  "handler": "index.handler",
                  "id": undefined,
                  "imageConfig": undefined,
                  "kmsKeyArn": undefined,
                  "layers": Array [
                    "#{Token[TOKEN.81]}",
                  ],
                  "logicalId": "\${Token[test-stack.my-function-test.Resource.LogicalID.87]}",
                  "memorySize": undefined,
                  "node": ConstructNode {
                    "_actualNode": Node {
                      "_aspects": Array [],
                      "_children": Object {},
                      "_context": Object {},
                      "_dependencies": Set {
                        Role {
                          "_allowCrossEnvironment": false,
                          "_physicalName": undefined,
                          "assumeRoleAction": "sts:AssumeRole",
                          "assumeRolePolicy": Object {
                            "Statement": Array [
                              Object {
                                "Action": "sts:AssumeRole",
                                "Effect": "Allow",
                                "Principal": Object {
                                  "Service": "\${Token[lambda.amazonaws.com.63]}",
                                },
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "attachedPolicies": AttachedPolicies {
                            "policies": Array [
                              Policy {
                                "_allowCrossEnvironment": false,
                                "_physicalName": "\${Token[TOKEN.82]}",
                                "_policyName": "\${Token[TOKEN.82]}",
                                "document": Object {
                                  "Statement": Array [
                                    Object {
                                      "Action": Array [
                                        "xray:PutTraceSegments",
                                        "xray:PutTelemetryRecords",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "env": Object {
                                  "account": "\${Token[AWS.AccountId.3]}",
                                  "region": "\${Token[AWS.Region.7]}",
                                },
                                "force": false,
                                "groups": Array [],
                                "node": ConstructNode {
                                  "_actualNode": Node {
                                    "_aspects": Array [],
                                    "_children": Object {
                                      "Resource": CfnPolicyConditional {
                                        "_cfnProperties": Object {
                                          "groups": Array [
                                            "#{Token[TOKEN.85]}",
                                          ],
                                          "policyDocument": Object {
                                            "Statement": Array [
                                              Object {
                                                "Action": Array [
                                                  "xray:PutTraceSegments",
                                                  "xray:PutTelemetryRecords",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.82]}",
                                          "roles": Array [
                                            "#{Token[TOKEN.83]}",
                                          ],
                                          "users": Array [
                                            "#{Token[TOKEN.84]}",
                                          ],
                                        },
                                        "cfnOptions": Object {},
                                        "cfnResourceType": "AWS::IAM::Policy",
                                        "dependsOn": Set {},
                                        "groups": Array [
                                          "#{Token[TOKEN.85]}",
                                        ],
                                        "logicalId": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                                        "node": ConstructNode {
                                          "_actualNode": Node {
                                            "_aspects": Array [],
                                            "_children": Object {},
                                            "_context": Object {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": Array [
                                              Object {
                                                "data": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                                                "trace": Array [
                                                  "new Policy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\policy.ts:154:22)",
                                                  "Role.addToPrincipalPolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\role.ts:367:28)",
                                                  "LambdaPowerToolsFunction.addToRolePolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function-base.ts:264:15)",
                                                  "LambdaPowerToolsFunction.buildTracingConfig (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:983:10)",
                                                  "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:664:27)",
                                                  "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                                                  "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                                                  "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                                  "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                                  "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                                  "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                                  "new Promise (<anonymous>)",
                                                  "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                                  "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                                  "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                                ],
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": Array [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "invokedAspects": Array [],
                                            "scope": [Circular],
                                          },
                                          "host": [Circular],
                                        },
                                        "policyDocument": Object {
                                          "Statement": Array [
                                            Object {
                                              "Action": Array [
                                                "xray:PutTraceSegments",
                                                "xray:PutTelemetryRecords",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.82]}",
                                        "rawOverrides": Object {},
                                        "roles": Array [
                                          "#{Token[TOKEN.83]}",
                                        ],
                                        "stack": [Circular],
                                        "users": Array [
                                          "#{Token[TOKEN.84]}",
                                        ],
                                        Symbol(@aws-cdk/core.DependableTrait): Object {
                                          "dependencyRoots": Array [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": Object {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": Array [],
                                    "_validations": Array [],
                                    "host": [Circular],
                                    "id": "DefaultPolicy",
                                    "invokedAspects": Array [],
                                    "scope": [Circular],
                                  },
                                  "host": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.82]}",
                                "referenceTaken": false,
                                "roles": Array [
                                  [Circular],
                                ],
                                "stack": [Circular],
                                "users": Array [],
                                Symbol(@aws-cdk/core.DependableTrait): Object {
                                  "dependencyRoots": Array [
                                    [Circular],
                                  ],
                                },
                              },
                            ],
                          },
                          "defaultPolicy": Policy {
                            "_allowCrossEnvironment": false,
                            "_physicalName": "\${Token[TOKEN.82]}",
                            "_policyName": "\${Token[TOKEN.82]}",
                            "document": Object {
                              "Statement": Array [
                                Object {
                                  "Action": Array [
                                    "xray:PutTraceSegments",
                                    "xray:PutTelemetryRecords",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "env": Object {
                              "account": "\${Token[AWS.AccountId.3]}",
                              "region": "\${Token[AWS.Region.7]}",
                            },
                            "force": false,
                            "groups": Array [],
                            "node": ConstructNode {
                              "_actualNode": Node {
                                "_aspects": Array [],
                                "_children": Object {
                                  "Resource": CfnPolicyConditional {
                                    "_cfnProperties": Object {
                                      "groups": Array [
                                        "#{Token[TOKEN.85]}",
                                      ],
                                      "policyDocument": Object {
                                        "Statement": Array [
                                          Object {
                                            "Action": Array [
                                              "xray:PutTraceSegments",
                                              "xray:PutTelemetryRecords",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.82]}",
                                      "roles": Array [
                                        "#{Token[TOKEN.83]}",
                                      ],
                                      "users": Array [
                                        "#{Token[TOKEN.84]}",
                                      ],
                                    },
                                    "cfnOptions": Object {},
                                    "cfnResourceType": "AWS::IAM::Policy",
                                    "dependsOn": Set {},
                                    "groups": Array [
                                      "#{Token[TOKEN.85]}",
                                    ],
                                    "logicalId": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                                    "node": ConstructNode {
                                      "_actualNode": Node {
                                        "_aspects": Array [],
                                        "_children": Object {},
                                        "_context": Object {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": Array [
                                          Object {
                                            "data": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                                            "trace": Array [
                                              "new Policy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\policy.ts:154:22)",
                                              "Role.addToPrincipalPolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\role.ts:367:28)",
                                              "LambdaPowerToolsFunction.addToRolePolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function-base.ts:264:15)",
                                              "LambdaPowerToolsFunction.buildTracingConfig (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:983:10)",
                                              "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:664:27)",
                                              "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                                              "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                                              "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                              "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                              "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                              "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                              "new Promise (<anonymous>)",
                                              "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                              "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                              "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                            ],
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": Array [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "invokedAspects": Array [],
                                        "scope": [Circular],
                                      },
                                      "host": [Circular],
                                    },
                                    "policyDocument": Object {
                                      "Statement": Array [
                                        Object {
                                          "Action": Array [
                                            "xray:PutTraceSegments",
                                            "xray:PutTelemetryRecords",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.82]}",
                                    "rawOverrides": Object {},
                                    "roles": Array [
                                      "#{Token[TOKEN.83]}",
                                    ],
                                    "stack": [Circular],
                                    "users": Array [
                                      "#{Token[TOKEN.84]}",
                                    ],
                                    Symbol(@aws-cdk/core.DependableTrait): Object {
                                      "dependencyRoots": Array [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": Object {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": Array [],
                                "_validations": Array [],
                                "host": [Circular],
                                "id": "DefaultPolicy",
                                "invokedAspects": Array [],
                                "scope": [Circular],
                              },
                              "host": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.82]}",
                            "referenceTaken": false,
                            "roles": Array [
                              [Circular],
                            ],
                            "stack": [Circular],
                            "users": Array [],
                            Symbol(@aws-cdk/core.DependableTrait): Object {
                              "dependencyRoots": Array [
                                [Circular],
                              ],
                            },
                          },
                          "env": Object {
                            "account": "\${Token[AWS.AccountId.3]}",
                            "region": "\${Token[AWS.Region.7]}",
                          },
                          "grantPrincipal": [Circular],
                          "inlinePolicies": Object {},
                          "managedPolicies": Array [
                            AwsManagedPolicy {
                              "managedPolicyArn": "\${Token[TOKEN.61]}",
                            },
                          ],
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {
                                "DefaultPolicy": Policy {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": "\${Token[TOKEN.82]}",
                                  "_policyName": "\${Token[TOKEN.82]}",
                                  "document": Object {
                                    "Statement": Array [
                                      Object {
                                        "Action": Array [
                                          "xray:PutTraceSegments",
                                          "xray:PutTelemetryRecords",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "env": Object {
                                    "account": "\${Token[AWS.AccountId.3]}",
                                    "region": "\${Token[AWS.Region.7]}",
                                  },
                                  "force": false,
                                  "groups": Array [],
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {
                                        "Resource": CfnPolicyConditional {
                                          "_cfnProperties": Object {
                                            "groups": Array [
                                              "#{Token[TOKEN.85]}",
                                            ],
                                            "policyDocument": Object {
                                              "Statement": Array [
                                                Object {
                                                  "Action": Array [
                                                    "xray:PutTraceSegments",
                                                    "xray:PutTelemetryRecords",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.82]}",
                                            "roles": Array [
                                              "#{Token[TOKEN.83]}",
                                            ],
                                            "users": Array [
                                              "#{Token[TOKEN.84]}",
                                            ],
                                          },
                                          "cfnOptions": Object {},
                                          "cfnResourceType": "AWS::IAM::Policy",
                                          "dependsOn": Set {},
                                          "groups": Array [
                                            "#{Token[TOKEN.85]}",
                                          ],
                                          "logicalId": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                                          "node": ConstructNode {
                                            "_actualNode": Node {
                                              "_aspects": Array [],
                                              "_children": Object {},
                                              "_context": Object {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": Array [
                                                Object {
                                                  "data": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                                                  "trace": Array [
                                                    "new Policy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\policy.ts:154:22)",
                                                    "Role.addToPrincipalPolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\role.ts:367:28)",
                                                    "LambdaPowerToolsFunction.addToRolePolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function-base.ts:264:15)",
                                                    "LambdaPowerToolsFunction.buildTracingConfig (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:983:10)",
                                                    "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:664:27)",
                                                    "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                                                    "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                                                    "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                                    "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                                    "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                                    "new Promise (<anonymous>)",
                                                    "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                                    "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                                  ],
                                                  "type": "aws:cdk:logicalId",
                                                },
                                              ],
                                              "_validations": Array [],
                                              "host": [Circular],
                                              "id": "Resource",
                                              "invokedAspects": Array [],
                                              "scope": [Circular],
                                            },
                                            "host": [Circular],
                                          },
                                          "policyDocument": Object {
                                            "Statement": Array [
                                              Object {
                                                "Action": Array [
                                                  "xray:PutTraceSegments",
                                                  "xray:PutTelemetryRecords",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.82]}",
                                          "rawOverrides": Object {},
                                          "roles": Array [
                                            "#{Token[TOKEN.83]}",
                                          ],
                                          "stack": [Circular],
                                          "users": Array [
                                            "#{Token[TOKEN.84]}",
                                          ],
                                          Symbol(@aws-cdk/core.DependableTrait): Object {
                                            "dependencyRoots": Array [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "DefaultPolicy",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.82]}",
                                  "referenceTaken": false,
                                  "roles": Array [
                                    [Circular],
                                  ],
                                  "stack": [Circular],
                                  "users": Array [],
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                                "Resource": CfnRole {
                                  "_cfnProperties": Object {
                                    "assumeRolePolicyDocument": Object {
                                      "Statement": Array [
                                        Object {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": Object {
                                            "Service": "\${Token[lambda.amazonaws.com.63]}",
                                          },
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "description": undefined,
                                    "managedPolicyArns": Array [
                                      "#{Token[TOKEN.64]}",
                                    ],
                                    "maxSessionDuration": undefined,
                                    "path": undefined,
                                    "permissionsBoundary": undefined,
                                    "policies": undefined,
                                    "roleName": "\${Token[TOKEN.62]}",
                                  },
                                  "assumeRolePolicyDocument": Object {
                                    "Statement": Array [
                                      Object {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": Object {
                                          "Service": "\${Token[lambda.amazonaws.com.63]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "attrArn": "\${Token[TOKEN.66]}",
                                  "attrRoleId": "\${Token[TOKEN.67]}",
                                  "cfnOptions": Object {},
                                  "cfnResourceType": "AWS::IAM::Role",
                                  "dependsOn": Set {},
                                  "description": undefined,
                                  "logicalId": "\${Token[test-stack.my-function-test.ServiceRole.Resource.LogicalID.65]}",
                                  "managedPolicyArns": Array [
                                    "#{Token[TOKEN.64]}",
                                  ],
                                  "maxSessionDuration": undefined,
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {},
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [
                                        Object {
                                          "data": "\${Token[test-stack.my-function-test.ServiceRole.Resource.LogicalID.65]}",
                                          "trace": Array [
                                            "new Role (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\role.ts:326:18)",
                                            "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:580:31)",
                                            "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                                            "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                                            "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                            "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                            "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                            "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                            "new Promise (<anonymous>)",
                                            "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                            "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                            "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                          ],
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "path": undefined,
                                  "permissionsBoundary": undefined,
                                  "policies": undefined,
                                  "rawOverrides": Object {},
                                  "roleName": "\${Token[TOKEN.62]}",
                                  "stack": [Circular],
                                  "tags": TagManager {
                                    "initialTagPriority": 50,
                                    "priorities": Map {},
                                    "resourceTypeName": "AWS::IAM::Role",
                                    "tagFormatter": StandardFormatter {},
                                    "tagPropertyName": "tags",
                                    "tags": Map {},
                                  },
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "ServiceRole",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "permissionsBoundary": undefined,
                          "physicalName": "\${Token[TOKEN.62]}",
                          "policyFragment": PrincipalPolicyFragment {
                            "conditions": Object {},
                            "principalJson": Object {
                              "AWS": Array [
                                "\${Token[TOKEN.68]}",
                              ],
                            },
                          },
                          "principalAccount": "\${Token[AWS.AccountId.3]}",
                          "roleArn": "\${Token[TOKEN.68]}",
                          "roleId": "\${Token[TOKEN.67]}",
                          "roleName": "\${Token[TOKEN.70]}",
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_locked": false,
                      "_metadata": Array [
                        Object {
                          "data": "\${Token[test-stack.my-function-test.Resource.LogicalID.87]}",
                          "trace": Array [
                            "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:642:35)",
                            "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                            "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                            "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                            "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                            "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                            "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                            "new Promise (<anonymous>)",
                            "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                            "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                            "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                          ],
                          "type": "aws:cdk:logicalId",
                        },
                      ],
                      "_validations": Array [],
                      "host": [Circular],
                      "id": "Resource",
                      "invokedAspects": Array [],
                      "scope": [Circular],
                    },
                    "host": [Circular],
                  },
                  "packageType": undefined,
                  "rawOverrides": Object {},
                  "reservedConcurrentExecutions": undefined,
                  "role": "\${Token[TOKEN.68]}",
                  "runtime": "python3.8",
                  "stack": [Circular],
                  "tags": TagManager {
                    "initialTagPriority": 50,
                    "priorities": Map {},
                    "resourceTypeName": "AWS::Lambda::Function",
                    "tagFormatter": StandardFormatter {},
                    "tagPropertyName": "tags",
                    "tags": Map {},
                  },
                  "timeout": 5,
                  "tracingConfig": Object {
                    "mode": "Active",
                  },
                  "vpcConfig": undefined,
                  Symbol(@aws-cdk/core.DependableTrait): Object {
                    "dependencyRoots": Array [
                      [Circular],
                    ],
                  },
                },
                "ServiceRole": Role {
                  "_allowCrossEnvironment": false,
                  "_physicalName": undefined,
                  "assumeRoleAction": "sts:AssumeRole",
                  "assumeRolePolicy": Object {
                    "Statement": Array [
                      Object {
                        "Action": "sts:AssumeRole",
                        "Effect": "Allow",
                        "Principal": Object {
                          "Service": "\${Token[lambda.amazonaws.com.63]}",
                        },
                      },
                    ],
                    "Version": "2012-10-17",
                  },
                  "attachedPolicies": AttachedPolicies {
                    "policies": Array [
                      Policy {
                        "_allowCrossEnvironment": false,
                        "_physicalName": "\${Token[TOKEN.82]}",
                        "_policyName": "\${Token[TOKEN.82]}",
                        "document": Object {
                          "Statement": Array [
                            Object {
                              "Action": Array [
                                "xray:PutTraceSegments",
                                "xray:PutTelemetryRecords",
                              ],
                              "Effect": "Allow",
                              "Resource": "*",
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "env": Object {
                          "account": "\${Token[AWS.AccountId.3]}",
                          "region": "\${Token[AWS.Region.7]}",
                        },
                        "force": false,
                        "groups": Array [],
                        "node": ConstructNode {
                          "_actualNode": Node {
                            "_aspects": Array [],
                            "_children": Object {
                              "Resource": CfnPolicyConditional {
                                "_cfnProperties": Object {
                                  "groups": Array [
                                    "#{Token[TOKEN.85]}",
                                  ],
                                  "policyDocument": Object {
                                    "Statement": Array [
                                      Object {
                                        "Action": Array [
                                          "xray:PutTraceSegments",
                                          "xray:PutTelemetryRecords",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "policyName": "\${Token[TOKEN.82]}",
                                  "roles": Array [
                                    "#{Token[TOKEN.83]}",
                                  ],
                                  "users": Array [
                                    "#{Token[TOKEN.84]}",
                                  ],
                                },
                                "cfnOptions": Object {},
                                "cfnResourceType": "AWS::IAM::Policy",
                                "dependsOn": Set {},
                                "groups": Array [
                                  "#{Token[TOKEN.85]}",
                                ],
                                "logicalId": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                                "node": ConstructNode {
                                  "_actualNode": Node {
                                    "_aspects": Array [],
                                    "_children": Object {},
                                    "_context": Object {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": Array [
                                      Object {
                                        "data": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                                        "trace": Array [
                                          "new Policy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\policy.ts:154:22)",
                                          "Role.addToPrincipalPolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\role.ts:367:28)",
                                          "LambdaPowerToolsFunction.addToRolePolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function-base.ts:264:15)",
                                          "LambdaPowerToolsFunction.buildTracingConfig (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:983:10)",
                                          "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:664:27)",
                                          "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                                          "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                                          "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                          "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                          "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                          "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                          "new Promise (<anonymous>)",
                                          "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                          "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                          "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                        ],
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": Array [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "invokedAspects": Array [],
                                    "scope": [Circular],
                                  },
                                  "host": [Circular],
                                },
                                "policyDocument": Object {
                                  "Statement": Array [
                                    Object {
                                      "Action": Array [
                                        "xray:PutTraceSegments",
                                        "xray:PutTelemetryRecords",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "policyName": "\${Token[TOKEN.82]}",
                                "rawOverrides": Object {},
                                "roles": Array [
                                  "#{Token[TOKEN.83]}",
                                ],
                                "stack": [Circular],
                                "users": Array [
                                  "#{Token[TOKEN.84]}",
                                ],
                                Symbol(@aws-cdk/core.DependableTrait): Object {
                                  "dependencyRoots": Array [
                                    [Circular],
                                  ],
                                },
                              },
                            },
                            "_context": Object {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": Array [],
                            "_validations": Array [],
                            "host": [Circular],
                            "id": "DefaultPolicy",
                            "invokedAspects": Array [],
                            "scope": [Circular],
                          },
                          "host": [Circular],
                        },
                        "physicalName": "\${Token[TOKEN.82]}",
                        "referenceTaken": false,
                        "roles": Array [
                          [Circular],
                        ],
                        "stack": [Circular],
                        "users": Array [],
                        Symbol(@aws-cdk/core.DependableTrait): Object {
                          "dependencyRoots": Array [
                            [Circular],
                          ],
                        },
                      },
                    ],
                  },
                  "defaultPolicy": Policy {
                    "_allowCrossEnvironment": false,
                    "_physicalName": "\${Token[TOKEN.82]}",
                    "_policyName": "\${Token[TOKEN.82]}",
                    "document": Object {
                      "Statement": Array [
                        Object {
                          "Action": Array [
                            "xray:PutTraceSegments",
                            "xray:PutTelemetryRecords",
                          ],
                          "Effect": "Allow",
                          "Resource": "*",
                        },
                      ],
                      "Version": "2012-10-17",
                    },
                    "env": Object {
                      "account": "\${Token[AWS.AccountId.3]}",
                      "region": "\${Token[AWS.Region.7]}",
                    },
                    "force": false,
                    "groups": Array [],
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {
                          "Resource": CfnPolicyConditional {
                            "_cfnProperties": Object {
                              "groups": Array [
                                "#{Token[TOKEN.85]}",
                              ],
                              "policyDocument": Object {
                                "Statement": Array [
                                  Object {
                                    "Action": Array [
                                      "xray:PutTraceSegments",
                                      "xray:PutTelemetryRecords",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "policyName": "\${Token[TOKEN.82]}",
                              "roles": Array [
                                "#{Token[TOKEN.83]}",
                              ],
                              "users": Array [
                                "#{Token[TOKEN.84]}",
                              ],
                            },
                            "cfnOptions": Object {},
                            "cfnResourceType": "AWS::IAM::Policy",
                            "dependsOn": Set {},
                            "groups": Array [
                              "#{Token[TOKEN.85]}",
                            ],
                            "logicalId": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                            "node": ConstructNode {
                              "_actualNode": Node {
                                "_aspects": Array [],
                                "_children": Object {},
                                "_context": Object {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": Array [
                                  Object {
                                    "data": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                                    "trace": Array [
                                      "new Policy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\policy.ts:154:22)",
                                      "Role.addToPrincipalPolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\role.ts:367:28)",
                                      "LambdaPowerToolsFunction.addToRolePolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function-base.ts:264:15)",
                                      "LambdaPowerToolsFunction.buildTracingConfig (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:983:10)",
                                      "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:664:27)",
                                      "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                                      "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                                      "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                      "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                      "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                      "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                      "new Promise (<anonymous>)",
                                      "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                      "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                      "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                    ],
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": Array [],
                                "host": [Circular],
                                "id": "Resource",
                                "invokedAspects": Array [],
                                "scope": [Circular],
                              },
                              "host": [Circular],
                            },
                            "policyDocument": Object {
                              "Statement": Array [
                                Object {
                                  "Action": Array [
                                    "xray:PutTraceSegments",
                                    "xray:PutTelemetryRecords",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "policyName": "\${Token[TOKEN.82]}",
                            "rawOverrides": Object {},
                            "roles": Array [
                              "#{Token[TOKEN.83]}",
                            ],
                            "stack": [Circular],
                            "users": Array [
                              "#{Token[TOKEN.84]}",
                            ],
                            Symbol(@aws-cdk/core.DependableTrait): Object {
                              "dependencyRoots": Array [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "DefaultPolicy",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "physicalName": "\${Token[TOKEN.82]}",
                    "referenceTaken": false,
                    "roles": Array [
                      [Circular],
                    ],
                    "stack": [Circular],
                    "users": Array [],
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                  "env": Object {
                    "account": "\${Token[AWS.AccountId.3]}",
                    "region": "\${Token[AWS.Region.7]}",
                  },
                  "grantPrincipal": [Circular],
                  "inlinePolicies": Object {},
                  "managedPolicies": Array [
                    AwsManagedPolicy {
                      "managedPolicyArn": "\${Token[TOKEN.61]}",
                    },
                  ],
                  "node": ConstructNode {
                    "_actualNode": Node {
                      "_aspects": Array [],
                      "_children": Object {
                        "DefaultPolicy": Policy {
                          "_allowCrossEnvironment": false,
                          "_physicalName": "\${Token[TOKEN.82]}",
                          "_policyName": "\${Token[TOKEN.82]}",
                          "document": Object {
                            "Statement": Array [
                              Object {
                                "Action": Array [
                                  "xray:PutTraceSegments",
                                  "xray:PutTelemetryRecords",
                                ],
                                "Effect": "Allow",
                                "Resource": "*",
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "env": Object {
                            "account": "\${Token[AWS.AccountId.3]}",
                            "region": "\${Token[AWS.Region.7]}",
                          },
                          "force": false,
                          "groups": Array [],
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {
                                "Resource": CfnPolicyConditional {
                                  "_cfnProperties": Object {
                                    "groups": Array [
                                      "#{Token[TOKEN.85]}",
                                    ],
                                    "policyDocument": Object {
                                      "Statement": Array [
                                        Object {
                                          "Action": Array [
                                            "xray:PutTraceSegments",
                                            "xray:PutTelemetryRecords",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.82]}",
                                    "roles": Array [
                                      "#{Token[TOKEN.83]}",
                                    ],
                                    "users": Array [
                                      "#{Token[TOKEN.84]}",
                                    ],
                                  },
                                  "cfnOptions": Object {},
                                  "cfnResourceType": "AWS::IAM::Policy",
                                  "dependsOn": Set {},
                                  "groups": Array [
                                    "#{Token[TOKEN.85]}",
                                  ],
                                  "logicalId": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {},
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [
                                        Object {
                                          "data": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                                          "trace": Array [
                                            "new Policy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\policy.ts:154:22)",
                                            "Role.addToPrincipalPolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\role.ts:367:28)",
                                            "LambdaPowerToolsFunction.addToRolePolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function-base.ts:264:15)",
                                            "LambdaPowerToolsFunction.buildTracingConfig (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:983:10)",
                                            "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:664:27)",
                                            "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                                            "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                                            "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                            "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                            "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                            "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                            "new Promise (<anonymous>)",
                                            "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                            "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                            "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                          ],
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "policyDocument": Object {
                                    "Statement": Array [
                                      Object {
                                        "Action": Array [
                                          "xray:PutTraceSegments",
                                          "xray:PutTelemetryRecords",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "policyName": "\${Token[TOKEN.82]}",
                                  "rawOverrides": Object {},
                                  "roles": Array [
                                    "#{Token[TOKEN.83]}",
                                  ],
                                  "stack": [Circular],
                                  "users": Array [
                                    "#{Token[TOKEN.84]}",
                                  ],
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "DefaultPolicy",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "physicalName": "\${Token[TOKEN.82]}",
                          "referenceTaken": false,
                          "roles": Array [
                            [Circular],
                          ],
                          "stack": [Circular],
                          "users": Array [],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                        "Resource": CfnRole {
                          "_cfnProperties": Object {
                            "assumeRolePolicyDocument": Object {
                              "Statement": Array [
                                Object {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": Object {
                                    "Service": "\${Token[lambda.amazonaws.com.63]}",
                                  },
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "description": undefined,
                            "managedPolicyArns": Array [
                              "#{Token[TOKEN.64]}",
                            ],
                            "maxSessionDuration": undefined,
                            "path": undefined,
                            "permissionsBoundary": undefined,
                            "policies": undefined,
                            "roleName": "\${Token[TOKEN.62]}",
                          },
                          "assumeRolePolicyDocument": Object {
                            "Statement": Array [
                              Object {
                                "Action": "sts:AssumeRole",
                                "Effect": "Allow",
                                "Principal": Object {
                                  "Service": "\${Token[lambda.amazonaws.com.63]}",
                                },
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "attrArn": "\${Token[TOKEN.66]}",
                          "attrRoleId": "\${Token[TOKEN.67]}",
                          "cfnOptions": Object {},
                          "cfnResourceType": "AWS::IAM::Role",
                          "dependsOn": Set {},
                          "description": undefined,
                          "logicalId": "\${Token[test-stack.my-function-test.ServiceRole.Resource.LogicalID.65]}",
                          "managedPolicyArns": Array [
                            "#{Token[TOKEN.64]}",
                          ],
                          "maxSessionDuration": undefined,
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.my-function-test.ServiceRole.Resource.LogicalID.65]}",
                                  "trace": Array [
                                    "new Role (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\role.ts:326:18)",
                                    "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:580:31)",
                                    "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                                    "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                                    "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                    "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                    "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                    "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "Resource",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "path": undefined,
                          "permissionsBoundary": undefined,
                          "policies": undefined,
                          "rawOverrides": Object {},
                          "roleName": "\${Token[TOKEN.62]}",
                          "stack": [Circular],
                          "tags": TagManager {
                            "initialTagPriority": 50,
                            "priorities": Map {},
                            "resourceTypeName": "AWS::IAM::Role",
                            "tagFormatter": StandardFormatter {},
                            "tagPropertyName": "tags",
                            "tags": Map {},
                          },
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": Object {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": Array [],
                      "_validations": Array [],
                      "host": [Circular],
                      "id": "ServiceRole",
                      "invokedAspects": Array [],
                      "scope": [Circular],
                    },
                    "host": [Circular],
                  },
                  "permissionsBoundary": undefined,
                  "physicalName": "\${Token[TOKEN.62]}",
                  "policyFragment": PrincipalPolicyFragment {
                    "conditions": Object {},
                    "principalJson": Object {
                      "AWS": Array [
                        "\${Token[TOKEN.68]}",
                      ],
                    },
                  },
                  "principalAccount": "\${Token[AWS.AccountId.3]}",
                  "roleArn": "\${Token[TOKEN.68]}",
                  "roleId": "\${Token[TOKEN.67]}",
                  "roleName": "\${Token[TOKEN.70]}",
                  "stack": [Circular],
                  Symbol(@aws-cdk/core.DependableTrait): Object {
                    "dependencyRoots": Array [
                      [Circular],
                    ],
                  },
                },
                "alias": Alias {
                  "_allowCrossEnvironment": true,
                  "_invocationGrants": Object {},
                  "_physicalName": "Current",
                  "aliasName": "Current",
                  "canCreatePermissions": true,
                  "env": Object {
                    "account": "\${Token[AWS.AccountId.3]}",
                    "region": "\${Token[AWS.Region.7]}",
                  },
                  "functionArn": "\${Token[TOKEN.100]}",
                  "functionName": "\${Token[TOKEN.109]}:Current",
                  "lambda": [Circular],
                  "node": ConstructNode {
                    "_actualNode": Node {
                      "_aspects": Array [],
                      "_children": Object {
                        "Resource": CfnAlias {
                          "_cfnProperties": Object {
                            "description": undefined,
                            "functionName": "\${Token[TOKEN.90]}",
                            "functionVersion": "\${Token[TOKEN.94]}",
                            "name": "Current",
                            "provisionedConcurrencyConfig": undefined,
                            "routingConfig": undefined,
                          },
                          "cfnOptions": Object {},
                          "cfnResourceType": "AWS::Lambda::Alias",
                          "dependsOn": Set {},
                          "description": undefined,
                          "functionName": "\${Token[TOKEN.90]}",
                          "functionVersion": "\${Token[TOKEN.94]}",
                          "logicalId": "\${Token[test-stack.my-function-test.alias.Resource.LogicalID.97]}",
                          "name": "Current",
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.my-function-test.alias.Resource.LogicalID.97]}",
                                  "trace": Array [
                                    "new Alias (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\alias.ts:148:19)",
                                    "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:42:18)",
                                    "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                    "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                    "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                    "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "Resource",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "provisionedConcurrencyConfig": undefined,
                          "rawOverrides": Object {},
                          "routingConfig": undefined,
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                        "ScalingRole": Import {
                          "_allowCrossEnvironment": false,
                          "_physicalName": undefined,
                          "assumeRoleAction": "sts:AssumeRole",
                          "attachedPolicies": AttachedPolicies {
                            "policies": Array [],
                          },
                          "env": Object {
                            "account": "\${Token[AWS.AccountId.3]}",
                            "region": "\${Token[AWS.Region.7]}",
                          },
                          "grantPrincipal": [Circular],
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "ScalingRole",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "physicalName": "\${Token[TOKEN.98]}",
                          "policyFragment": PrincipalPolicyFragment {
                            "conditions": Object {},
                            "principalJson": Object {
                              "AWS": Array [
                                "arn:\${Token[AWS.Partition.6]}:iam::\${Token[AWS.AccountId.3]}:role/aws-service-role/lambda.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency",
                              ],
                            },
                          },
                          "principalAccount": "\${Token[AWS.AccountId.3]}",
                          "roleArn": "arn:\${Token[AWS.Partition.6]}:iam::\${Token[AWS.AccountId.3]}:role/aws-service-role/lambda.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency",
                          "roleName": "AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency",
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": Object {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": Array [],
                      "_validations": Array [],
                      "host": [Circular],
                      "id": "alias",
                      "invokedAspects": Array [],
                      "scope": [Circular],
                    },
                    "host": [Circular],
                  },
                  "permissionsNode": ConstructNode {
                    "_actualNode": Node {
                      "_aspects": Array [],
                      "_children": Object {
                        "Resource": CfnAlias {
                          "_cfnProperties": Object {
                            "description": undefined,
                            "functionName": "\${Token[TOKEN.90]}",
                            "functionVersion": "\${Token[TOKEN.94]}",
                            "name": "Current",
                            "provisionedConcurrencyConfig": undefined,
                            "routingConfig": undefined,
                          },
                          "cfnOptions": Object {},
                          "cfnResourceType": "AWS::Lambda::Alias",
                          "dependsOn": Set {},
                          "description": undefined,
                          "functionName": "\${Token[TOKEN.90]}",
                          "functionVersion": "\${Token[TOKEN.94]}",
                          "logicalId": "\${Token[test-stack.my-function-test.alias.Resource.LogicalID.97]}",
                          "name": "Current",
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.my-function-test.alias.Resource.LogicalID.97]}",
                                  "trace": Array [
                                    "new Alias (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\alias.ts:148:19)",
                                    "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:42:18)",
                                    "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                    "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                    "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                    "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "Resource",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "provisionedConcurrencyConfig": undefined,
                          "rawOverrides": Object {},
                          "routingConfig": undefined,
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                        "ScalingRole": Import {
                          "_allowCrossEnvironment": false,
                          "_physicalName": undefined,
                          "assumeRoleAction": "sts:AssumeRole",
                          "attachedPolicies": AttachedPolicies {
                            "policies": Array [],
                          },
                          "env": Object {
                            "account": "\${Token[AWS.AccountId.3]}",
                            "region": "\${Token[AWS.Region.7]}",
                          },
                          "grantPrincipal": [Circular],
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "ScalingRole",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "physicalName": "\${Token[TOKEN.98]}",
                          "policyFragment": PrincipalPolicyFragment {
                            "conditions": Object {},
                            "principalJson": Object {
                              "AWS": Array [
                                "arn:\${Token[AWS.Partition.6]}:iam::\${Token[AWS.AccountId.3]}:role/aws-service-role/lambda.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency",
                              ],
                            },
                          },
                          "principalAccount": "\${Token[AWS.AccountId.3]}",
                          "roleArn": "arn:\${Token[AWS.Partition.6]}:iam::\${Token[AWS.AccountId.3]}:role/aws-service-role/lambda.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency",
                          "roleName": "AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency",
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": Object {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": Array [],
                      "_validations": Array [],
                      "host": [Circular],
                      "id": "alias",
                      "invokedAspects": Array [],
                      "scope": [Circular],
                    },
                    "host": [Circular],
                  },
                  "physicalName": "Current",
                  "qualifier": "\${Token[TOKEN.102]}",
                  "scalingRole": Import {
                    "_allowCrossEnvironment": false,
                    "_physicalName": undefined,
                    "assumeRoleAction": "sts:AssumeRole",
                    "attachedPolicies": AttachedPolicies {
                      "policies": Array [],
                    },
                    "env": Object {
                      "account": "\${Token[AWS.AccountId.3]}",
                      "region": "\${Token[AWS.Region.7]}",
                    },
                    "grantPrincipal": [Circular],
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {},
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "ScalingRole",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "physicalName": "\${Token[TOKEN.98]}",
                    "policyFragment": PrincipalPolicyFragment {
                      "conditions": Object {},
                      "principalJson": Object {
                        "AWS": Array [
                          "arn:\${Token[AWS.Partition.6]}:iam::\${Token[AWS.AccountId.3]}:role/aws-service-role/lambda.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency",
                        ],
                      },
                    },
                    "principalAccount": "\${Token[AWS.AccountId.3]}",
                    "roleArn": "arn:\${Token[AWS.Partition.6]}:iam::\${Token[AWS.AccountId.3]}:role/aws-service-role/lambda.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency",
                    "roleName": "AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency",
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                  "stack": [Circular],
                  "version": Version {
                    "_allowCrossEnvironment": false,
                    "_invocationGrants": Object {},
                    "_physicalName": undefined,
                    "canCreatePermissions": true,
                    "env": Object {
                      "account": "\${Token[AWS.AccountId.3]}",
                      "region": "\${Token[AWS.Region.7]}",
                    },
                    "functionArn": "\${Token[TOKEN.95]}",
                    "functionName": "\${Token[TOKEN.90]}:\${Token[TOKEN.94]}",
                    "lambda": [Circular],
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {
                          "Resource": CfnVersion {
                            "_cfnProperties": Object {
                              "codeSha256": undefined,
                              "description": undefined,
                              "functionName": "\${Token[TOKEN.90]}",
                              "provisionedConcurrencyConfig": undefined,
                            },
                            "_logicalIdOverride": "\${Token[TOKEN.96]}",
                            "attrVersion": "\${Token[TOKEN.94]}",
                            "cfnOptions": Object {},
                            "cfnResourceType": "AWS::Lambda::Version",
                            "codeSha256": undefined,
                            "dependsOn": Set {},
                            "description": undefined,
                            "functionName": "\${Token[TOKEN.90]}",
                            "logicalId": "\${Token[test-stack.my-function-test.CurrentVersion.Resource.LogicalID.93]}",
                            "node": ConstructNode {
                              "_actualNode": Node {
                                "_aspects": Array [],
                                "_children": Object {},
                                "_context": Object {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": Array [
                                  Object {
                                    "data": "\${Token[test-stack.my-function-test.CurrentVersion.Resource.LogicalID.93]}",
                                    "trace": Array [
                                      "new Version (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\lambda-version.ts:187:21)",
                                      "LambdaPowerToolsFunction.get currentVersion [as currentVersion] (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:364:28)",
                                      "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:44:21)",
                                      "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                      "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                      "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                      "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                      "new Promise (<anonymous>)",
                                      "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                      "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                      "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                    ],
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": Array [],
                                "host": [Circular],
                                "id": "Resource",
                                "invokedAspects": Array [],
                                "scope": [Circular],
                              },
                              "host": [Circular],
                            },
                            "provisionedConcurrencyConfig": undefined,
                            "rawOverrides": Object {},
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): Object {
                              "dependencyRoots": Array [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "CurrentVersion",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "permissionsNode": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {
                          "Resource": CfnVersion {
                            "_cfnProperties": Object {
                              "codeSha256": undefined,
                              "description": undefined,
                              "functionName": "\${Token[TOKEN.90]}",
                              "provisionedConcurrencyConfig": undefined,
                            },
                            "_logicalIdOverride": "\${Token[TOKEN.96]}",
                            "attrVersion": "\${Token[TOKEN.94]}",
                            "cfnOptions": Object {},
                            "cfnResourceType": "AWS::Lambda::Version",
                            "codeSha256": undefined,
                            "dependsOn": Set {},
                            "description": undefined,
                            "functionName": "\${Token[TOKEN.90]}",
                            "logicalId": "\${Token[test-stack.my-function-test.CurrentVersion.Resource.LogicalID.93]}",
                            "node": ConstructNode {
                              "_actualNode": Node {
                                "_aspects": Array [],
                                "_children": Object {},
                                "_context": Object {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": Array [
                                  Object {
                                    "data": "\${Token[test-stack.my-function-test.CurrentVersion.Resource.LogicalID.93]}",
                                    "trace": Array [
                                      "new Version (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\lambda-version.ts:187:21)",
                                      "LambdaPowerToolsFunction.get currentVersion [as currentVersion] (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:364:28)",
                                      "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:44:21)",
                                      "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                      "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                      "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                      "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                      "new Promise (<anonymous>)",
                                      "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                      "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                      "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                    ],
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": Array [],
                                "host": [Circular],
                                "id": "Resource",
                                "invokedAspects": Array [],
                                "scope": [Circular],
                              },
                              "host": [Circular],
                            },
                            "provisionedConcurrencyConfig": undefined,
                            "rawOverrides": Object {},
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): Object {
                              "dependencyRoots": Array [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "CurrentVersion",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "physicalName": "\${Token[TOKEN.92]}",
                    "qualifier": "\${Token[TOKEN.94]}",
                    "stack": [Circular],
                    "version": "\${Token[TOKEN.94]}",
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                  Symbol(@aws-cdk/core.DependableTrait): Object {
                    "dependencyRoots": Array [
                      [Circular],
                    ],
                  },
                },
              },
              "_context": Object {},
              "_dependencies": Set {},
              "_locked": false,
              "_metadata": Array [],
              "_validations": Array [],
              "host": [Circular],
              "id": "my-function-test",
              "invokedAspects": Array [],
              "scope": [Circular],
            },
            "host": [Circular],
          },
          "permissionsNode": ConstructNode {
            "_actualNode": Node {
              "_aspects": Array [],
              "_children": Object {
                "Code": Asset {
                  "assetHash": "70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05",
                  "assetPath": "asset.70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05",
                  "bucket": Import {
                    "_allowCrossEnvironment": false,
                    "_physicalName": undefined,
                    "autoCreatePolicy": false,
                    "bucketArn": "arn:\${Token[AWS.Partition.6]}:s3:::\${Token[TOKEN.74]}",
                    "bucketDomainName": "\${Token[TOKEN.74]}.s3.\${Token[AWS.URLSuffix.4]}",
                    "bucketDualStackDomainName": "\${Token[TOKEN.74]}.s3.dualstack.\${Token[AWS.Region.7]}.\${Token[AWS.URLSuffix.4]}",
                    "bucketName": "\${Token[TOKEN.74]}",
                    "bucketRegionalDomainName": "\${Token[TOKEN.74]}.s3.\${Token[AWS.Region.7]}.\${Token[AWS.URLSuffix.4]}",
                    "bucketWebsiteDomainName": "\${Token[TOKEN.74]}.s3-website-\${Token[AWS.Region.7]}.\${Token[AWS.URLSuffix.4]}",
                    "bucketWebsiteNewUrlFormat": false,
                    "bucketWebsiteUrl": "http://\${Token[TOKEN.74]}.s3-website-\${Token[AWS.Region.7]}.\${Token[AWS.URLSuffix.4]}",
                    "disallowPublicAccess": false,
                    "encryptionKey": undefined,
                    "env": Object {
                      "account": "\${Token[AWS.AccountId.3]}",
                      "region": "\${Token[AWS.Region.7]}",
                    },
                    "isWebsite": false,
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {},
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "AssetBucket",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "physicalName": "\${Token[TOKEN.80]}",
                    "policy": undefined,
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                  "httpUrl": "https://s3.\${Token[AWS.Region.7]}.\${Token[AWS.URLSuffix.4]}/\${Token[TOKEN.74]}/\${Token[TOKEN.77]}\${Token[TOKEN.79]}",
                  "isFile": false,
                  "isZipArchive": true,
                  "node": ConstructNode {
                    "_actualNode": Node {
                      "_aspects": Array [],
                      "_children": Object {
                        "AssetBucket": Import {
                          "_allowCrossEnvironment": false,
                          "_physicalName": undefined,
                          "autoCreatePolicy": false,
                          "bucketArn": "arn:\${Token[AWS.Partition.6]}:s3:::\${Token[TOKEN.74]}",
                          "bucketDomainName": "\${Token[TOKEN.74]}.s3.\${Token[AWS.URLSuffix.4]}",
                          "bucketDualStackDomainName": "\${Token[TOKEN.74]}.s3.dualstack.\${Token[AWS.Region.7]}.\${Token[AWS.URLSuffix.4]}",
                          "bucketName": "\${Token[TOKEN.74]}",
                          "bucketRegionalDomainName": "\${Token[TOKEN.74]}.s3.\${Token[AWS.Region.7]}.\${Token[AWS.URLSuffix.4]}",
                          "bucketWebsiteDomainName": "\${Token[TOKEN.74]}.s3-website-\${Token[AWS.Region.7]}.\${Token[AWS.URLSuffix.4]}",
                          "bucketWebsiteNewUrlFormat": false,
                          "bucketWebsiteUrl": "http://\${Token[TOKEN.74]}.s3-website-\${Token[AWS.Region.7]}.\${Token[AWS.URLSuffix.4]}",
                          "disallowPublicAccess": false,
                          "encryptionKey": undefined,
                          "env": Object {
                            "account": "\${Token[AWS.AccountId.3]}",
                            "region": "\${Token[AWS.Region.7]}",
                          },
                          "isWebsite": false,
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "AssetBucket",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "physicalName": "\${Token[TOKEN.80]}",
                          "policy": undefined,
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                        "Stage": AssetStaging {
                          "absoluteStagedPath": "C:\\\\Users\\\\geyso\\\\AppData\\\\Local\\\\Temp\\\\cdk.outC2WeRE\\\\asset.70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05",
                          "assetHash": "70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05",
                          "assetOutdir": "C:\\\\Users\\\\geyso\\\\AppData\\\\Local\\\\Temp\\\\cdk.outC2WeRE",
                          "cacheKey": "916e2eddd69fcf1c5bc016d0c405e57d53d7af9e46f9c7a440e21bcb6ad4a38f",
                          "customSourceFingerprint": undefined,
                          "fingerprintOptions": Object {
                            "assetHash": undefined,
                            "assetHashType": undefined,
                            "bundling": Object {
                              "command": Array [
                                "bash",
                                "-c",
                                "rsync -r /var/dependencies/. /asset-output/. && rsync -r . /asset-output/.",
                              ],
                              "image": "43f91ef871f412d67a906839ea969ecedbfa022c71a8b6a627621e4e04a292ca",
                            },
                            "exclude": Array [
                              "*.pyc",
                            ],
                            "follow": undefined,
                            "path": "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\lambda-handler-poetry",
                            "sourcePath": "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\lambda-handler-poetry",
                          },
                          "hashType": "source",
                          "isArchive": true,
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "Stage",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "packaging": "zip",
                          "sourcePath": "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\lambda-handler-poetry",
                          "sourceStats": Stats {
                            "atime": 2021-05-26T20:13:05.756Z,
                            "atimeMs": 1622059985755.8203,
                            "birthtime": 2021-05-26T14:31:05.330Z,
                            "birthtimeMs": 1622039465330.4805,
                            "blksize": 4096,
                            "blocks": 0,
                            "ctime": 2021-05-26T14:32:15.272Z,
                            "ctimeMs": 1622039535271.8657,
                            "dev": 509626933,
                            "gid": 0,
                            "ino": 3659174699168474,
                            "mode": 16822,
                            "mtime": 2021-05-26T14:31:44.159Z,
                            "mtimeMs": 1622039504159.0552,
                            "nlink": 1,
                            "rdev": 0,
                            "size": 0,
                            "uid": 0,
                          },
                          "stagedPath": "C:\\\\Users\\\\geyso\\\\AppData\\\\Local\\\\Temp\\\\cdk.outC2WeRE\\\\asset.70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05",
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": Object {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": Array [],
                      "_validations": Array [],
                      "host": [Circular],
                      "id": "Code",
                      "invokedAspects": Array [],
                      "scope": [Circular],
                    },
                    "host": [Circular],
                  },
                  "s3BucketName": "\${Token[TOKEN.74]}",
                  "s3ObjectKey": "\${Token[TOKEN.77]}\${Token[TOKEN.79]}",
                  "s3ObjectUrl": "s3://\${Token[TOKEN.74]}/\${Token[TOKEN.77]}\${Token[TOKEN.79]}",
                  "s3Url": "https://s3.\${Token[AWS.Region.7]}.\${Token[AWS.URLSuffix.4]}/\${Token[TOKEN.74]}/\${Token[TOKEN.77]}\${Token[TOKEN.79]}",
                  "sourceHash": "70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05",
                  Symbol(@aws-cdk/core.DependableTrait): Object {
                    "dependencyRoots": Array [
                      [Circular],
                    ],
                  },
                },
                "CurrentVersion": Version {
                  "_allowCrossEnvironment": false,
                  "_invocationGrants": Object {},
                  "_physicalName": undefined,
                  "canCreatePermissions": true,
                  "env": Object {
                    "account": "\${Token[AWS.AccountId.3]}",
                    "region": "\${Token[AWS.Region.7]}",
                  },
                  "functionArn": "\${Token[TOKEN.95]}",
                  "functionName": "\${Token[TOKEN.90]}:\${Token[TOKEN.94]}",
                  "lambda": [Circular],
                  "node": ConstructNode {
                    "_actualNode": Node {
                      "_aspects": Array [],
                      "_children": Object {
                        "Resource": CfnVersion {
                          "_cfnProperties": Object {
                            "codeSha256": undefined,
                            "description": undefined,
                            "functionName": "\${Token[TOKEN.90]}",
                            "provisionedConcurrencyConfig": undefined,
                          },
                          "_logicalIdOverride": "\${Token[TOKEN.96]}",
                          "attrVersion": "\${Token[TOKEN.94]}",
                          "cfnOptions": Object {},
                          "cfnResourceType": "AWS::Lambda::Version",
                          "codeSha256": undefined,
                          "dependsOn": Set {},
                          "description": undefined,
                          "functionName": "\${Token[TOKEN.90]}",
                          "logicalId": "\${Token[test-stack.my-function-test.CurrentVersion.Resource.LogicalID.93]}",
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.my-function-test.CurrentVersion.Resource.LogicalID.93]}",
                                  "trace": Array [
                                    "new Version (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\lambda-version.ts:187:21)",
                                    "LambdaPowerToolsFunction.get currentVersion [as currentVersion] (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:364:28)",
                                    "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:44:21)",
                                    "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                    "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                    "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                    "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "Resource",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "provisionedConcurrencyConfig": undefined,
                          "rawOverrides": Object {},
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": Object {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": Array [],
                      "_validations": Array [],
                      "host": [Circular],
                      "id": "CurrentVersion",
                      "invokedAspects": Array [],
                      "scope": [Circular],
                    },
                    "host": [Circular],
                  },
                  "permissionsNode": ConstructNode {
                    "_actualNode": Node {
                      "_aspects": Array [],
                      "_children": Object {
                        "Resource": CfnVersion {
                          "_cfnProperties": Object {
                            "codeSha256": undefined,
                            "description": undefined,
                            "functionName": "\${Token[TOKEN.90]}",
                            "provisionedConcurrencyConfig": undefined,
                          },
                          "_logicalIdOverride": "\${Token[TOKEN.96]}",
                          "attrVersion": "\${Token[TOKEN.94]}",
                          "cfnOptions": Object {},
                          "cfnResourceType": "AWS::Lambda::Version",
                          "codeSha256": undefined,
                          "dependsOn": Set {},
                          "description": undefined,
                          "functionName": "\${Token[TOKEN.90]}",
                          "logicalId": "\${Token[test-stack.my-function-test.CurrentVersion.Resource.LogicalID.93]}",
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.my-function-test.CurrentVersion.Resource.LogicalID.93]}",
                                  "trace": Array [
                                    "new Version (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\lambda-version.ts:187:21)",
                                    "LambdaPowerToolsFunction.get currentVersion [as currentVersion] (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:364:28)",
                                    "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:44:21)",
                                    "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                    "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                    "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                    "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "Resource",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "provisionedConcurrencyConfig": undefined,
                          "rawOverrides": Object {},
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": Object {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": Array [],
                      "_validations": Array [],
                      "host": [Circular],
                      "id": "CurrentVersion",
                      "invokedAspects": Array [],
                      "scope": [Circular],
                    },
                    "host": [Circular],
                  },
                  "physicalName": "\${Token[TOKEN.92]}",
                  "qualifier": "\${Token[TOKEN.94]}",
                  "stack": [Circular],
                  "version": "\${Token[TOKEN.94]}",
                  Symbol(@aws-cdk/core.DependableTrait): Object {
                    "dependencyRoots": Array [
                      [Circular],
                    ],
                  },
                },
                "Resource": CfnFunction {
                  "_cfnProperties": Object {
                    "code": Object {
                      "imageUri": undefined,
                      "s3Bucket": "\${Token[TOKEN.74]}",
                      "s3Key": "\${Token[TOKEN.77]}\${Token[TOKEN.79]}",
                      "s3ObjectVersion": undefined,
                      "zipFile": undefined,
                    },
                    "codeSigningConfigArn": undefined,
                    "deadLetterConfig": undefined,
                    "description": undefined,
                    "environment": "<unresolved-lazy>",
                    "fileSystemConfigs": undefined,
                    "functionName": "\${Token[TOKEN.60]}",
                    "handler": "index.handler",
                    "imageConfig": undefined,
                    "kmsKeyArn": undefined,
                    "layers": Array [
                      "#{Token[TOKEN.81]}",
                    ],
                    "memorySize": undefined,
                    "packageType": undefined,
                    "reservedConcurrentExecutions": undefined,
                    "role": "\${Token[TOKEN.68]}",
                    "runtime": "python3.8",
                    "timeout": 5,
                    "tracingConfig": Object {
                      "mode": "Active",
                    },
                    "vpcConfig": undefined,
                  },
                  "attrArn": "\${Token[TOKEN.88]}",
                  "cfnOptions": Object {},
                  "cfnResourceType": "AWS::Lambda::Function",
                  "code": Object {
                    "imageUri": undefined,
                    "s3Bucket": "\${Token[TOKEN.74]}",
                    "s3Key": "\${Token[TOKEN.77]}\${Token[TOKEN.79]}",
                    "s3ObjectVersion": undefined,
                    "zipFile": undefined,
                  },
                  "codeSigningConfigArn": undefined,
                  "deadLetterConfig": undefined,
                  "dependsOn": Set {},
                  "description": undefined,
                  "environment": "<unresolved-lazy>",
                  "fileSystemConfigs": undefined,
                  "functionName": "\${Token[TOKEN.60]}",
                  "handler": "index.handler",
                  "id": undefined,
                  "imageConfig": undefined,
                  "kmsKeyArn": undefined,
                  "layers": Array [
                    "#{Token[TOKEN.81]}",
                  ],
                  "logicalId": "\${Token[test-stack.my-function-test.Resource.LogicalID.87]}",
                  "memorySize": undefined,
                  "node": ConstructNode {
                    "_actualNode": Node {
                      "_aspects": Array [],
                      "_children": Object {},
                      "_context": Object {},
                      "_dependencies": Set {
                        Role {
                          "_allowCrossEnvironment": false,
                          "_physicalName": undefined,
                          "assumeRoleAction": "sts:AssumeRole",
                          "assumeRolePolicy": Object {
                            "Statement": Array [
                              Object {
                                "Action": "sts:AssumeRole",
                                "Effect": "Allow",
                                "Principal": Object {
                                  "Service": "\${Token[lambda.amazonaws.com.63]}",
                                },
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "attachedPolicies": AttachedPolicies {
                            "policies": Array [
                              Policy {
                                "_allowCrossEnvironment": false,
                                "_physicalName": "\${Token[TOKEN.82]}",
                                "_policyName": "\${Token[TOKEN.82]}",
                                "document": Object {
                                  "Statement": Array [
                                    Object {
                                      "Action": Array [
                                        "xray:PutTraceSegments",
                                        "xray:PutTelemetryRecords",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "env": Object {
                                  "account": "\${Token[AWS.AccountId.3]}",
                                  "region": "\${Token[AWS.Region.7]}",
                                },
                                "force": false,
                                "groups": Array [],
                                "node": ConstructNode {
                                  "_actualNode": Node {
                                    "_aspects": Array [],
                                    "_children": Object {
                                      "Resource": CfnPolicyConditional {
                                        "_cfnProperties": Object {
                                          "groups": Array [
                                            "#{Token[TOKEN.85]}",
                                          ],
                                          "policyDocument": Object {
                                            "Statement": Array [
                                              Object {
                                                "Action": Array [
                                                  "xray:PutTraceSegments",
                                                  "xray:PutTelemetryRecords",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.82]}",
                                          "roles": Array [
                                            "#{Token[TOKEN.83]}",
                                          ],
                                          "users": Array [
                                            "#{Token[TOKEN.84]}",
                                          ],
                                        },
                                        "cfnOptions": Object {},
                                        "cfnResourceType": "AWS::IAM::Policy",
                                        "dependsOn": Set {},
                                        "groups": Array [
                                          "#{Token[TOKEN.85]}",
                                        ],
                                        "logicalId": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                                        "node": ConstructNode {
                                          "_actualNode": Node {
                                            "_aspects": Array [],
                                            "_children": Object {},
                                            "_context": Object {},
                                            "_dependencies": Set {},
                                            "_locked": false,
                                            "_metadata": Array [
                                              Object {
                                                "data": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                                                "trace": Array [
                                                  "new Policy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\policy.ts:154:22)",
                                                  "Role.addToPrincipalPolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\role.ts:367:28)",
                                                  "LambdaPowerToolsFunction.addToRolePolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function-base.ts:264:15)",
                                                  "LambdaPowerToolsFunction.buildTracingConfig (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:983:10)",
                                                  "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:664:27)",
                                                  "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                                                  "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                                                  "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                                  "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                                  "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                                  "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                                  "new Promise (<anonymous>)",
                                                  "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                                  "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                                  "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                                ],
                                                "type": "aws:cdk:logicalId",
                                              },
                                            ],
                                            "_validations": Array [],
                                            "host": [Circular],
                                            "id": "Resource",
                                            "invokedAspects": Array [],
                                            "scope": [Circular],
                                          },
                                          "host": [Circular],
                                        },
                                        "policyDocument": Object {
                                          "Statement": Array [
                                            Object {
                                              "Action": Array [
                                                "xray:PutTraceSegments",
                                                "xray:PutTelemetryRecords",
                                              ],
                                              "Effect": "Allow",
                                              "Resource": "*",
                                            },
                                          ],
                                          "Version": "2012-10-17",
                                        },
                                        "policyName": "\${Token[TOKEN.82]}",
                                        "rawOverrides": Object {},
                                        "roles": Array [
                                          "#{Token[TOKEN.83]}",
                                        ],
                                        "stack": [Circular],
                                        "users": Array [
                                          "#{Token[TOKEN.84]}",
                                        ],
                                        Symbol(@aws-cdk/core.DependableTrait): Object {
                                          "dependencyRoots": Array [
                                            [Circular],
                                          ],
                                        },
                                      },
                                    },
                                    "_context": Object {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": Array [],
                                    "_validations": Array [],
                                    "host": [Circular],
                                    "id": "DefaultPolicy",
                                    "invokedAspects": Array [],
                                    "scope": [Circular],
                                  },
                                  "host": [Circular],
                                },
                                "physicalName": "\${Token[TOKEN.82]}",
                                "referenceTaken": false,
                                "roles": Array [
                                  [Circular],
                                ],
                                "stack": [Circular],
                                "users": Array [],
                                Symbol(@aws-cdk/core.DependableTrait): Object {
                                  "dependencyRoots": Array [
                                    [Circular],
                                  ],
                                },
                              },
                            ],
                          },
                          "defaultPolicy": Policy {
                            "_allowCrossEnvironment": false,
                            "_physicalName": "\${Token[TOKEN.82]}",
                            "_policyName": "\${Token[TOKEN.82]}",
                            "document": Object {
                              "Statement": Array [
                                Object {
                                  "Action": Array [
                                    "xray:PutTraceSegments",
                                    "xray:PutTelemetryRecords",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "env": Object {
                              "account": "\${Token[AWS.AccountId.3]}",
                              "region": "\${Token[AWS.Region.7]}",
                            },
                            "force": false,
                            "groups": Array [],
                            "node": ConstructNode {
                              "_actualNode": Node {
                                "_aspects": Array [],
                                "_children": Object {
                                  "Resource": CfnPolicyConditional {
                                    "_cfnProperties": Object {
                                      "groups": Array [
                                        "#{Token[TOKEN.85]}",
                                      ],
                                      "policyDocument": Object {
                                        "Statement": Array [
                                          Object {
                                            "Action": Array [
                                              "xray:PutTraceSegments",
                                              "xray:PutTelemetryRecords",
                                            ],
                                            "Effect": "Allow",
                                            "Resource": "*",
                                          },
                                        ],
                                        "Version": "2012-10-17",
                                      },
                                      "policyName": "\${Token[TOKEN.82]}",
                                      "roles": Array [
                                        "#{Token[TOKEN.83]}",
                                      ],
                                      "users": Array [
                                        "#{Token[TOKEN.84]}",
                                      ],
                                    },
                                    "cfnOptions": Object {},
                                    "cfnResourceType": "AWS::IAM::Policy",
                                    "dependsOn": Set {},
                                    "groups": Array [
                                      "#{Token[TOKEN.85]}",
                                    ],
                                    "logicalId": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                                    "node": ConstructNode {
                                      "_actualNode": Node {
                                        "_aspects": Array [],
                                        "_children": Object {},
                                        "_context": Object {},
                                        "_dependencies": Set {},
                                        "_locked": false,
                                        "_metadata": Array [
                                          Object {
                                            "data": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                                            "trace": Array [
                                              "new Policy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\policy.ts:154:22)",
                                              "Role.addToPrincipalPolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\role.ts:367:28)",
                                              "LambdaPowerToolsFunction.addToRolePolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function-base.ts:264:15)",
                                              "LambdaPowerToolsFunction.buildTracingConfig (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:983:10)",
                                              "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:664:27)",
                                              "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                                              "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                                              "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                              "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                              "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                              "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                              "new Promise (<anonymous>)",
                                              "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                              "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                              "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                            ],
                                            "type": "aws:cdk:logicalId",
                                          },
                                        ],
                                        "_validations": Array [],
                                        "host": [Circular],
                                        "id": "Resource",
                                        "invokedAspects": Array [],
                                        "scope": [Circular],
                                      },
                                      "host": [Circular],
                                    },
                                    "policyDocument": Object {
                                      "Statement": Array [
                                        Object {
                                          "Action": Array [
                                            "xray:PutTraceSegments",
                                            "xray:PutTelemetryRecords",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.82]}",
                                    "rawOverrides": Object {},
                                    "roles": Array [
                                      "#{Token[TOKEN.83]}",
                                    ],
                                    "stack": [Circular],
                                    "users": Array [
                                      "#{Token[TOKEN.84]}",
                                    ],
                                    Symbol(@aws-cdk/core.DependableTrait): Object {
                                      "dependencyRoots": Array [
                                        [Circular],
                                      ],
                                    },
                                  },
                                },
                                "_context": Object {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": Array [],
                                "_validations": Array [],
                                "host": [Circular],
                                "id": "DefaultPolicy",
                                "invokedAspects": Array [],
                                "scope": [Circular],
                              },
                              "host": [Circular],
                            },
                            "physicalName": "\${Token[TOKEN.82]}",
                            "referenceTaken": false,
                            "roles": Array [
                              [Circular],
                            ],
                            "stack": [Circular],
                            "users": Array [],
                            Symbol(@aws-cdk/core.DependableTrait): Object {
                              "dependencyRoots": Array [
                                [Circular],
                              ],
                            },
                          },
                          "env": Object {
                            "account": "\${Token[AWS.AccountId.3]}",
                            "region": "\${Token[AWS.Region.7]}",
                          },
                          "grantPrincipal": [Circular],
                          "inlinePolicies": Object {},
                          "managedPolicies": Array [
                            AwsManagedPolicy {
                              "managedPolicyArn": "\${Token[TOKEN.61]}",
                            },
                          ],
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {
                                "DefaultPolicy": Policy {
                                  "_allowCrossEnvironment": false,
                                  "_physicalName": "\${Token[TOKEN.82]}",
                                  "_policyName": "\${Token[TOKEN.82]}",
                                  "document": Object {
                                    "Statement": Array [
                                      Object {
                                        "Action": Array [
                                          "xray:PutTraceSegments",
                                          "xray:PutTelemetryRecords",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "env": Object {
                                    "account": "\${Token[AWS.AccountId.3]}",
                                    "region": "\${Token[AWS.Region.7]}",
                                  },
                                  "force": false,
                                  "groups": Array [],
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {
                                        "Resource": CfnPolicyConditional {
                                          "_cfnProperties": Object {
                                            "groups": Array [
                                              "#{Token[TOKEN.85]}",
                                            ],
                                            "policyDocument": Object {
                                              "Statement": Array [
                                                Object {
                                                  "Action": Array [
                                                    "xray:PutTraceSegments",
                                                    "xray:PutTelemetryRecords",
                                                  ],
                                                  "Effect": "Allow",
                                                  "Resource": "*",
                                                },
                                              ],
                                              "Version": "2012-10-17",
                                            },
                                            "policyName": "\${Token[TOKEN.82]}",
                                            "roles": Array [
                                              "#{Token[TOKEN.83]}",
                                            ],
                                            "users": Array [
                                              "#{Token[TOKEN.84]}",
                                            ],
                                          },
                                          "cfnOptions": Object {},
                                          "cfnResourceType": "AWS::IAM::Policy",
                                          "dependsOn": Set {},
                                          "groups": Array [
                                            "#{Token[TOKEN.85]}",
                                          ],
                                          "logicalId": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                                          "node": ConstructNode {
                                            "_actualNode": Node {
                                              "_aspects": Array [],
                                              "_children": Object {},
                                              "_context": Object {},
                                              "_dependencies": Set {},
                                              "_locked": false,
                                              "_metadata": Array [
                                                Object {
                                                  "data": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                                                  "trace": Array [
                                                    "new Policy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\policy.ts:154:22)",
                                                    "Role.addToPrincipalPolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\role.ts:367:28)",
                                                    "LambdaPowerToolsFunction.addToRolePolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function-base.ts:264:15)",
                                                    "LambdaPowerToolsFunction.buildTracingConfig (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:983:10)",
                                                    "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:664:27)",
                                                    "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                                                    "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                                                    "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                                    "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                                    "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                                    "new Promise (<anonymous>)",
                                                    "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                                    "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                                  ],
                                                  "type": "aws:cdk:logicalId",
                                                },
                                              ],
                                              "_validations": Array [],
                                              "host": [Circular],
                                              "id": "Resource",
                                              "invokedAspects": Array [],
                                              "scope": [Circular],
                                            },
                                            "host": [Circular],
                                          },
                                          "policyDocument": Object {
                                            "Statement": Array [
                                              Object {
                                                "Action": Array [
                                                  "xray:PutTraceSegments",
                                                  "xray:PutTelemetryRecords",
                                                ],
                                                "Effect": "Allow",
                                                "Resource": "*",
                                              },
                                            ],
                                            "Version": "2012-10-17",
                                          },
                                          "policyName": "\${Token[TOKEN.82]}",
                                          "rawOverrides": Object {},
                                          "roles": Array [
                                            "#{Token[TOKEN.83]}",
                                          ],
                                          "stack": [Circular],
                                          "users": Array [
                                            "#{Token[TOKEN.84]}",
                                          ],
                                          Symbol(@aws-cdk/core.DependableTrait): Object {
                                            "dependencyRoots": Array [
                                              [Circular],
                                            ],
                                          },
                                        },
                                      },
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "DefaultPolicy",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "physicalName": "\${Token[TOKEN.82]}",
                                  "referenceTaken": false,
                                  "roles": Array [
                                    [Circular],
                                  ],
                                  "stack": [Circular],
                                  "users": Array [],
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                                "Resource": CfnRole {
                                  "_cfnProperties": Object {
                                    "assumeRolePolicyDocument": Object {
                                      "Statement": Array [
                                        Object {
                                          "Action": "sts:AssumeRole",
                                          "Effect": "Allow",
                                          "Principal": Object {
                                            "Service": "\${Token[lambda.amazonaws.com.63]}",
                                          },
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "description": undefined,
                                    "managedPolicyArns": Array [
                                      "#{Token[TOKEN.64]}",
                                    ],
                                    "maxSessionDuration": undefined,
                                    "path": undefined,
                                    "permissionsBoundary": undefined,
                                    "policies": undefined,
                                    "roleName": "\${Token[TOKEN.62]}",
                                  },
                                  "assumeRolePolicyDocument": Object {
                                    "Statement": Array [
                                      Object {
                                        "Action": "sts:AssumeRole",
                                        "Effect": "Allow",
                                        "Principal": Object {
                                          "Service": "\${Token[lambda.amazonaws.com.63]}",
                                        },
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "attrArn": "\${Token[TOKEN.66]}",
                                  "attrRoleId": "\${Token[TOKEN.67]}",
                                  "cfnOptions": Object {},
                                  "cfnResourceType": "AWS::IAM::Role",
                                  "dependsOn": Set {},
                                  "description": undefined,
                                  "logicalId": "\${Token[test-stack.my-function-test.ServiceRole.Resource.LogicalID.65]}",
                                  "managedPolicyArns": Array [
                                    "#{Token[TOKEN.64]}",
                                  ],
                                  "maxSessionDuration": undefined,
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {},
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [
                                        Object {
                                          "data": "\${Token[test-stack.my-function-test.ServiceRole.Resource.LogicalID.65]}",
                                          "trace": Array [
                                            "new Role (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\role.ts:326:18)",
                                            "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:580:31)",
                                            "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                                            "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                                            "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                            "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                            "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                            "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                            "new Promise (<anonymous>)",
                                            "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                            "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                            "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                          ],
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "path": undefined,
                                  "permissionsBoundary": undefined,
                                  "policies": undefined,
                                  "rawOverrides": Object {},
                                  "roleName": "\${Token[TOKEN.62]}",
                                  "stack": [Circular],
                                  "tags": TagManager {
                                    "initialTagPriority": 50,
                                    "priorities": Map {},
                                    "resourceTypeName": "AWS::IAM::Role",
                                    "tagFormatter": StandardFormatter {},
                                    "tagPropertyName": "tags",
                                    "tags": Map {},
                                  },
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "ServiceRole",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "permissionsBoundary": undefined,
                          "physicalName": "\${Token[TOKEN.62]}",
                          "policyFragment": PrincipalPolicyFragment {
                            "conditions": Object {},
                            "principalJson": Object {
                              "AWS": Array [
                                "\${Token[TOKEN.68]}",
                              ],
                            },
                          },
                          "principalAccount": "\${Token[AWS.AccountId.3]}",
                          "roleArn": "\${Token[TOKEN.68]}",
                          "roleId": "\${Token[TOKEN.67]}",
                          "roleName": "\${Token[TOKEN.70]}",
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_locked": false,
                      "_metadata": Array [
                        Object {
                          "data": "\${Token[test-stack.my-function-test.Resource.LogicalID.87]}",
                          "trace": Array [
                            "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:642:35)",
                            "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                            "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                            "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                            "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                            "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                            "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                            "new Promise (<anonymous>)",
                            "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                            "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                            "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                          ],
                          "type": "aws:cdk:logicalId",
                        },
                      ],
                      "_validations": Array [],
                      "host": [Circular],
                      "id": "Resource",
                      "invokedAspects": Array [],
                      "scope": [Circular],
                    },
                    "host": [Circular],
                  },
                  "packageType": undefined,
                  "rawOverrides": Object {},
                  "reservedConcurrentExecutions": undefined,
                  "role": "\${Token[TOKEN.68]}",
                  "runtime": "python3.8",
                  "stack": [Circular],
                  "tags": TagManager {
                    "initialTagPriority": 50,
                    "priorities": Map {},
                    "resourceTypeName": "AWS::Lambda::Function",
                    "tagFormatter": StandardFormatter {},
                    "tagPropertyName": "tags",
                    "tags": Map {},
                  },
                  "timeout": 5,
                  "tracingConfig": Object {
                    "mode": "Active",
                  },
                  "vpcConfig": undefined,
                  Symbol(@aws-cdk/core.DependableTrait): Object {
                    "dependencyRoots": Array [
                      [Circular],
                    ],
                  },
                },
                "ServiceRole": Role {
                  "_allowCrossEnvironment": false,
                  "_physicalName": undefined,
                  "assumeRoleAction": "sts:AssumeRole",
                  "assumeRolePolicy": Object {
                    "Statement": Array [
                      Object {
                        "Action": "sts:AssumeRole",
                        "Effect": "Allow",
                        "Principal": Object {
                          "Service": "\${Token[lambda.amazonaws.com.63]}",
                        },
                      },
                    ],
                    "Version": "2012-10-17",
                  },
                  "attachedPolicies": AttachedPolicies {
                    "policies": Array [
                      Policy {
                        "_allowCrossEnvironment": false,
                        "_physicalName": "\${Token[TOKEN.82]}",
                        "_policyName": "\${Token[TOKEN.82]}",
                        "document": Object {
                          "Statement": Array [
                            Object {
                              "Action": Array [
                                "xray:PutTraceSegments",
                                "xray:PutTelemetryRecords",
                              ],
                              "Effect": "Allow",
                              "Resource": "*",
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "env": Object {
                          "account": "\${Token[AWS.AccountId.3]}",
                          "region": "\${Token[AWS.Region.7]}",
                        },
                        "force": false,
                        "groups": Array [],
                        "node": ConstructNode {
                          "_actualNode": Node {
                            "_aspects": Array [],
                            "_children": Object {
                              "Resource": CfnPolicyConditional {
                                "_cfnProperties": Object {
                                  "groups": Array [
                                    "#{Token[TOKEN.85]}",
                                  ],
                                  "policyDocument": Object {
                                    "Statement": Array [
                                      Object {
                                        "Action": Array [
                                          "xray:PutTraceSegments",
                                          "xray:PutTelemetryRecords",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "policyName": "\${Token[TOKEN.82]}",
                                  "roles": Array [
                                    "#{Token[TOKEN.83]}",
                                  ],
                                  "users": Array [
                                    "#{Token[TOKEN.84]}",
                                  ],
                                },
                                "cfnOptions": Object {},
                                "cfnResourceType": "AWS::IAM::Policy",
                                "dependsOn": Set {},
                                "groups": Array [
                                  "#{Token[TOKEN.85]}",
                                ],
                                "logicalId": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                                "node": ConstructNode {
                                  "_actualNode": Node {
                                    "_aspects": Array [],
                                    "_children": Object {},
                                    "_context": Object {},
                                    "_dependencies": Set {},
                                    "_locked": false,
                                    "_metadata": Array [
                                      Object {
                                        "data": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                                        "trace": Array [
                                          "new Policy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\policy.ts:154:22)",
                                          "Role.addToPrincipalPolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\role.ts:367:28)",
                                          "LambdaPowerToolsFunction.addToRolePolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function-base.ts:264:15)",
                                          "LambdaPowerToolsFunction.buildTracingConfig (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:983:10)",
                                          "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:664:27)",
                                          "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                                          "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                                          "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                          "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                          "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                          "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                          "new Promise (<anonymous>)",
                                          "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                          "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                          "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                        ],
                                        "type": "aws:cdk:logicalId",
                                      },
                                    ],
                                    "_validations": Array [],
                                    "host": [Circular],
                                    "id": "Resource",
                                    "invokedAspects": Array [],
                                    "scope": [Circular],
                                  },
                                  "host": [Circular],
                                },
                                "policyDocument": Object {
                                  "Statement": Array [
                                    Object {
                                      "Action": Array [
                                        "xray:PutTraceSegments",
                                        "xray:PutTelemetryRecords",
                                      ],
                                      "Effect": "Allow",
                                      "Resource": "*",
                                    },
                                  ],
                                  "Version": "2012-10-17",
                                },
                                "policyName": "\${Token[TOKEN.82]}",
                                "rawOverrides": Object {},
                                "roles": Array [
                                  "#{Token[TOKEN.83]}",
                                ],
                                "stack": [Circular],
                                "users": Array [
                                  "#{Token[TOKEN.84]}",
                                ],
                                Symbol(@aws-cdk/core.DependableTrait): Object {
                                  "dependencyRoots": Array [
                                    [Circular],
                                  ],
                                },
                              },
                            },
                            "_context": Object {},
                            "_dependencies": Set {},
                            "_locked": false,
                            "_metadata": Array [],
                            "_validations": Array [],
                            "host": [Circular],
                            "id": "DefaultPolicy",
                            "invokedAspects": Array [],
                            "scope": [Circular],
                          },
                          "host": [Circular],
                        },
                        "physicalName": "\${Token[TOKEN.82]}",
                        "referenceTaken": false,
                        "roles": Array [
                          [Circular],
                        ],
                        "stack": [Circular],
                        "users": Array [],
                        Symbol(@aws-cdk/core.DependableTrait): Object {
                          "dependencyRoots": Array [
                            [Circular],
                          ],
                        },
                      },
                    ],
                  },
                  "defaultPolicy": Policy {
                    "_allowCrossEnvironment": false,
                    "_physicalName": "\${Token[TOKEN.82]}",
                    "_policyName": "\${Token[TOKEN.82]}",
                    "document": Object {
                      "Statement": Array [
                        Object {
                          "Action": Array [
                            "xray:PutTraceSegments",
                            "xray:PutTelemetryRecords",
                          ],
                          "Effect": "Allow",
                          "Resource": "*",
                        },
                      ],
                      "Version": "2012-10-17",
                    },
                    "env": Object {
                      "account": "\${Token[AWS.AccountId.3]}",
                      "region": "\${Token[AWS.Region.7]}",
                    },
                    "force": false,
                    "groups": Array [],
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {
                          "Resource": CfnPolicyConditional {
                            "_cfnProperties": Object {
                              "groups": Array [
                                "#{Token[TOKEN.85]}",
                              ],
                              "policyDocument": Object {
                                "Statement": Array [
                                  Object {
                                    "Action": Array [
                                      "xray:PutTraceSegments",
                                      "xray:PutTelemetryRecords",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "policyName": "\${Token[TOKEN.82]}",
                              "roles": Array [
                                "#{Token[TOKEN.83]}",
                              ],
                              "users": Array [
                                "#{Token[TOKEN.84]}",
                              ],
                            },
                            "cfnOptions": Object {},
                            "cfnResourceType": "AWS::IAM::Policy",
                            "dependsOn": Set {},
                            "groups": Array [
                              "#{Token[TOKEN.85]}",
                            ],
                            "logicalId": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                            "node": ConstructNode {
                              "_actualNode": Node {
                                "_aspects": Array [],
                                "_children": Object {},
                                "_context": Object {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": Array [
                                  Object {
                                    "data": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                                    "trace": Array [
                                      "new Policy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\policy.ts:154:22)",
                                      "Role.addToPrincipalPolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\role.ts:367:28)",
                                      "LambdaPowerToolsFunction.addToRolePolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function-base.ts:264:15)",
                                      "LambdaPowerToolsFunction.buildTracingConfig (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:983:10)",
                                      "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:664:27)",
                                      "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                                      "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                                      "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                      "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                      "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                      "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                      "new Promise (<anonymous>)",
                                      "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                      "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                      "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                    ],
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": Array [],
                                "host": [Circular],
                                "id": "Resource",
                                "invokedAspects": Array [],
                                "scope": [Circular],
                              },
                              "host": [Circular],
                            },
                            "policyDocument": Object {
                              "Statement": Array [
                                Object {
                                  "Action": Array [
                                    "xray:PutTraceSegments",
                                    "xray:PutTelemetryRecords",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "policyName": "\${Token[TOKEN.82]}",
                            "rawOverrides": Object {},
                            "roles": Array [
                              "#{Token[TOKEN.83]}",
                            ],
                            "stack": [Circular],
                            "users": Array [
                              "#{Token[TOKEN.84]}",
                            ],
                            Symbol(@aws-cdk/core.DependableTrait): Object {
                              "dependencyRoots": Array [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "DefaultPolicy",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "physicalName": "\${Token[TOKEN.82]}",
                    "referenceTaken": false,
                    "roles": Array [
                      [Circular],
                    ],
                    "stack": [Circular],
                    "users": Array [],
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                  "env": Object {
                    "account": "\${Token[AWS.AccountId.3]}",
                    "region": "\${Token[AWS.Region.7]}",
                  },
                  "grantPrincipal": [Circular],
                  "inlinePolicies": Object {},
                  "managedPolicies": Array [
                    AwsManagedPolicy {
                      "managedPolicyArn": "\${Token[TOKEN.61]}",
                    },
                  ],
                  "node": ConstructNode {
                    "_actualNode": Node {
                      "_aspects": Array [],
                      "_children": Object {
                        "DefaultPolicy": Policy {
                          "_allowCrossEnvironment": false,
                          "_physicalName": "\${Token[TOKEN.82]}",
                          "_policyName": "\${Token[TOKEN.82]}",
                          "document": Object {
                            "Statement": Array [
                              Object {
                                "Action": Array [
                                  "xray:PutTraceSegments",
                                  "xray:PutTelemetryRecords",
                                ],
                                "Effect": "Allow",
                                "Resource": "*",
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "env": Object {
                            "account": "\${Token[AWS.AccountId.3]}",
                            "region": "\${Token[AWS.Region.7]}",
                          },
                          "force": false,
                          "groups": Array [],
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {
                                "Resource": CfnPolicyConditional {
                                  "_cfnProperties": Object {
                                    "groups": Array [
                                      "#{Token[TOKEN.85]}",
                                    ],
                                    "policyDocument": Object {
                                      "Statement": Array [
                                        Object {
                                          "Action": Array [
                                            "xray:PutTraceSegments",
                                            "xray:PutTelemetryRecords",
                                          ],
                                          "Effect": "Allow",
                                          "Resource": "*",
                                        },
                                      ],
                                      "Version": "2012-10-17",
                                    },
                                    "policyName": "\${Token[TOKEN.82]}",
                                    "roles": Array [
                                      "#{Token[TOKEN.83]}",
                                    ],
                                    "users": Array [
                                      "#{Token[TOKEN.84]}",
                                    ],
                                  },
                                  "cfnOptions": Object {},
                                  "cfnResourceType": "AWS::IAM::Policy",
                                  "dependsOn": Set {},
                                  "groups": Array [
                                    "#{Token[TOKEN.85]}",
                                  ],
                                  "logicalId": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                                  "node": ConstructNode {
                                    "_actualNode": Node {
                                      "_aspects": Array [],
                                      "_children": Object {},
                                      "_context": Object {},
                                      "_dependencies": Set {},
                                      "_locked": false,
                                      "_metadata": Array [
                                        Object {
                                          "data": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                                          "trace": Array [
                                            "new Policy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\policy.ts:154:22)",
                                            "Role.addToPrincipalPolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\role.ts:367:28)",
                                            "LambdaPowerToolsFunction.addToRolePolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function-base.ts:264:15)",
                                            "LambdaPowerToolsFunction.buildTracingConfig (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:983:10)",
                                            "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:664:27)",
                                            "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                                            "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                                            "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                            "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                            "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                            "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                            "new Promise (<anonymous>)",
                                            "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                            "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                            "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                          ],
                                          "type": "aws:cdk:logicalId",
                                        },
                                      ],
                                      "_validations": Array [],
                                      "host": [Circular],
                                      "id": "Resource",
                                      "invokedAspects": Array [],
                                      "scope": [Circular],
                                    },
                                    "host": [Circular],
                                  },
                                  "policyDocument": Object {
                                    "Statement": Array [
                                      Object {
                                        "Action": Array [
                                          "xray:PutTraceSegments",
                                          "xray:PutTelemetryRecords",
                                        ],
                                        "Effect": "Allow",
                                        "Resource": "*",
                                      },
                                    ],
                                    "Version": "2012-10-17",
                                  },
                                  "policyName": "\${Token[TOKEN.82]}",
                                  "rawOverrides": Object {},
                                  "roles": Array [
                                    "#{Token[TOKEN.83]}",
                                  ],
                                  "stack": [Circular],
                                  "users": Array [
                                    "#{Token[TOKEN.84]}",
                                  ],
                                  Symbol(@aws-cdk/core.DependableTrait): Object {
                                    "dependencyRoots": Array [
                                      [Circular],
                                    ],
                                  },
                                },
                              },
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "DefaultPolicy",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "physicalName": "\${Token[TOKEN.82]}",
                          "referenceTaken": false,
                          "roles": Array [
                            [Circular],
                          ],
                          "stack": [Circular],
                          "users": Array [],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                        "Resource": CfnRole {
                          "_cfnProperties": Object {
                            "assumeRolePolicyDocument": Object {
                              "Statement": Array [
                                Object {
                                  "Action": "sts:AssumeRole",
                                  "Effect": "Allow",
                                  "Principal": Object {
                                    "Service": "\${Token[lambda.amazonaws.com.63]}",
                                  },
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "description": undefined,
                            "managedPolicyArns": Array [
                              "#{Token[TOKEN.64]}",
                            ],
                            "maxSessionDuration": undefined,
                            "path": undefined,
                            "permissionsBoundary": undefined,
                            "policies": undefined,
                            "roleName": "\${Token[TOKEN.62]}",
                          },
                          "assumeRolePolicyDocument": Object {
                            "Statement": Array [
                              Object {
                                "Action": "sts:AssumeRole",
                                "Effect": "Allow",
                                "Principal": Object {
                                  "Service": "\${Token[lambda.amazonaws.com.63]}",
                                },
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "attrArn": "\${Token[TOKEN.66]}",
                          "attrRoleId": "\${Token[TOKEN.67]}",
                          "cfnOptions": Object {},
                          "cfnResourceType": "AWS::IAM::Role",
                          "dependsOn": Set {},
                          "description": undefined,
                          "logicalId": "\${Token[test-stack.my-function-test.ServiceRole.Resource.LogicalID.65]}",
                          "managedPolicyArns": Array [
                            "#{Token[TOKEN.64]}",
                          ],
                          "maxSessionDuration": undefined,
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.my-function-test.ServiceRole.Resource.LogicalID.65]}",
                                  "trace": Array [
                                    "new Role (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\role.ts:326:18)",
                                    "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:580:31)",
                                    "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                                    "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                                    "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                    "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                    "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                    "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "Resource",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "path": undefined,
                          "permissionsBoundary": undefined,
                          "policies": undefined,
                          "rawOverrides": Object {},
                          "roleName": "\${Token[TOKEN.62]}",
                          "stack": [Circular],
                          "tags": TagManager {
                            "initialTagPriority": 50,
                            "priorities": Map {},
                            "resourceTypeName": "AWS::IAM::Role",
                            "tagFormatter": StandardFormatter {},
                            "tagPropertyName": "tags",
                            "tags": Map {},
                          },
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": Object {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": Array [],
                      "_validations": Array [],
                      "host": [Circular],
                      "id": "ServiceRole",
                      "invokedAspects": Array [],
                      "scope": [Circular],
                    },
                    "host": [Circular],
                  },
                  "permissionsBoundary": undefined,
                  "physicalName": "\${Token[TOKEN.62]}",
                  "policyFragment": PrincipalPolicyFragment {
                    "conditions": Object {},
                    "principalJson": Object {
                      "AWS": Array [
                        "\${Token[TOKEN.68]}",
                      ],
                    },
                  },
                  "principalAccount": "\${Token[AWS.AccountId.3]}",
                  "roleArn": "\${Token[TOKEN.68]}",
                  "roleId": "\${Token[TOKEN.67]}",
                  "roleName": "\${Token[TOKEN.70]}",
                  "stack": [Circular],
                  Symbol(@aws-cdk/core.DependableTrait): Object {
                    "dependencyRoots": Array [
                      [Circular],
                    ],
                  },
                },
                "alias": Alias {
                  "_allowCrossEnvironment": true,
                  "_invocationGrants": Object {},
                  "_physicalName": "Current",
                  "aliasName": "Current",
                  "canCreatePermissions": true,
                  "env": Object {
                    "account": "\${Token[AWS.AccountId.3]}",
                    "region": "\${Token[AWS.Region.7]}",
                  },
                  "functionArn": "\${Token[TOKEN.100]}",
                  "functionName": "\${Token[TOKEN.109]}:Current",
                  "lambda": [Circular],
                  "node": ConstructNode {
                    "_actualNode": Node {
                      "_aspects": Array [],
                      "_children": Object {
                        "Resource": CfnAlias {
                          "_cfnProperties": Object {
                            "description": undefined,
                            "functionName": "\${Token[TOKEN.90]}",
                            "functionVersion": "\${Token[TOKEN.94]}",
                            "name": "Current",
                            "provisionedConcurrencyConfig": undefined,
                            "routingConfig": undefined,
                          },
                          "cfnOptions": Object {},
                          "cfnResourceType": "AWS::Lambda::Alias",
                          "dependsOn": Set {},
                          "description": undefined,
                          "functionName": "\${Token[TOKEN.90]}",
                          "functionVersion": "\${Token[TOKEN.94]}",
                          "logicalId": "\${Token[test-stack.my-function-test.alias.Resource.LogicalID.97]}",
                          "name": "Current",
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.my-function-test.alias.Resource.LogicalID.97]}",
                                  "trace": Array [
                                    "new Alias (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\alias.ts:148:19)",
                                    "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:42:18)",
                                    "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                    "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                    "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                    "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "Resource",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "provisionedConcurrencyConfig": undefined,
                          "rawOverrides": Object {},
                          "routingConfig": undefined,
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                        "ScalingRole": Import {
                          "_allowCrossEnvironment": false,
                          "_physicalName": undefined,
                          "assumeRoleAction": "sts:AssumeRole",
                          "attachedPolicies": AttachedPolicies {
                            "policies": Array [],
                          },
                          "env": Object {
                            "account": "\${Token[AWS.AccountId.3]}",
                            "region": "\${Token[AWS.Region.7]}",
                          },
                          "grantPrincipal": [Circular],
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "ScalingRole",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "physicalName": "\${Token[TOKEN.98]}",
                          "policyFragment": PrincipalPolicyFragment {
                            "conditions": Object {},
                            "principalJson": Object {
                              "AWS": Array [
                                "arn:\${Token[AWS.Partition.6]}:iam::\${Token[AWS.AccountId.3]}:role/aws-service-role/lambda.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency",
                              ],
                            },
                          },
                          "principalAccount": "\${Token[AWS.AccountId.3]}",
                          "roleArn": "arn:\${Token[AWS.Partition.6]}:iam::\${Token[AWS.AccountId.3]}:role/aws-service-role/lambda.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency",
                          "roleName": "AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency",
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": Object {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": Array [],
                      "_validations": Array [],
                      "host": [Circular],
                      "id": "alias",
                      "invokedAspects": Array [],
                      "scope": [Circular],
                    },
                    "host": [Circular],
                  },
                  "permissionsNode": ConstructNode {
                    "_actualNode": Node {
                      "_aspects": Array [],
                      "_children": Object {
                        "Resource": CfnAlias {
                          "_cfnProperties": Object {
                            "description": undefined,
                            "functionName": "\${Token[TOKEN.90]}",
                            "functionVersion": "\${Token[TOKEN.94]}",
                            "name": "Current",
                            "provisionedConcurrencyConfig": undefined,
                            "routingConfig": undefined,
                          },
                          "cfnOptions": Object {},
                          "cfnResourceType": "AWS::Lambda::Alias",
                          "dependsOn": Set {},
                          "description": undefined,
                          "functionName": "\${Token[TOKEN.90]}",
                          "functionVersion": "\${Token[TOKEN.94]}",
                          "logicalId": "\${Token[test-stack.my-function-test.alias.Resource.LogicalID.97]}",
                          "name": "Current",
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.my-function-test.alias.Resource.LogicalID.97]}",
                                  "trace": Array [
                                    "new Alias (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\alias.ts:148:19)",
                                    "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:42:18)",
                                    "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                    "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                    "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                    "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "Resource",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "provisionedConcurrencyConfig": undefined,
                          "rawOverrides": Object {},
                          "routingConfig": undefined,
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                        "ScalingRole": Import {
                          "_allowCrossEnvironment": false,
                          "_physicalName": undefined,
                          "assumeRoleAction": "sts:AssumeRole",
                          "attachedPolicies": AttachedPolicies {
                            "policies": Array [],
                          },
                          "env": Object {
                            "account": "\${Token[AWS.AccountId.3]}",
                            "region": "\${Token[AWS.Region.7]}",
                          },
                          "grantPrincipal": [Circular],
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "ScalingRole",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "physicalName": "\${Token[TOKEN.98]}",
                          "policyFragment": PrincipalPolicyFragment {
                            "conditions": Object {},
                            "principalJson": Object {
                              "AWS": Array [
                                "arn:\${Token[AWS.Partition.6]}:iam::\${Token[AWS.AccountId.3]}:role/aws-service-role/lambda.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency",
                              ],
                            },
                          },
                          "principalAccount": "\${Token[AWS.AccountId.3]}",
                          "roleArn": "arn:\${Token[AWS.Partition.6]}:iam::\${Token[AWS.AccountId.3]}:role/aws-service-role/lambda.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency",
                          "roleName": "AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency",
                          "stack": [Circular],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": Object {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": Array [],
                      "_validations": Array [],
                      "host": [Circular],
                      "id": "alias",
                      "invokedAspects": Array [],
                      "scope": [Circular],
                    },
                    "host": [Circular],
                  },
                  "physicalName": "Current",
                  "qualifier": "\${Token[TOKEN.102]}",
                  "scalingRole": Import {
                    "_allowCrossEnvironment": false,
                    "_physicalName": undefined,
                    "assumeRoleAction": "sts:AssumeRole",
                    "attachedPolicies": AttachedPolicies {
                      "policies": Array [],
                    },
                    "env": Object {
                      "account": "\${Token[AWS.AccountId.3]}",
                      "region": "\${Token[AWS.Region.7]}",
                    },
                    "grantPrincipal": [Circular],
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {},
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "ScalingRole",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "physicalName": "\${Token[TOKEN.98]}",
                    "policyFragment": PrincipalPolicyFragment {
                      "conditions": Object {},
                      "principalJson": Object {
                        "AWS": Array [
                          "arn:\${Token[AWS.Partition.6]}:iam::\${Token[AWS.AccountId.3]}:role/aws-service-role/lambda.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency",
                        ],
                      },
                    },
                    "principalAccount": "\${Token[AWS.AccountId.3]}",
                    "roleArn": "arn:\${Token[AWS.Partition.6]}:iam::\${Token[AWS.AccountId.3]}:role/aws-service-role/lambda.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency",
                    "roleName": "AWSServiceRoleForApplicationAutoScaling_LambdaConcurrency",
                    "stack": [Circular],
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                  "stack": [Circular],
                  "version": Version {
                    "_allowCrossEnvironment": false,
                    "_invocationGrants": Object {},
                    "_physicalName": undefined,
                    "canCreatePermissions": true,
                    "env": Object {
                      "account": "\${Token[AWS.AccountId.3]}",
                      "region": "\${Token[AWS.Region.7]}",
                    },
                    "functionArn": "\${Token[TOKEN.95]}",
                    "functionName": "\${Token[TOKEN.90]}:\${Token[TOKEN.94]}",
                    "lambda": [Circular],
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {
                          "Resource": CfnVersion {
                            "_cfnProperties": Object {
                              "codeSha256": undefined,
                              "description": undefined,
                              "functionName": "\${Token[TOKEN.90]}",
                              "provisionedConcurrencyConfig": undefined,
                            },
                            "_logicalIdOverride": "\${Token[TOKEN.96]}",
                            "attrVersion": "\${Token[TOKEN.94]}",
                            "cfnOptions": Object {},
                            "cfnResourceType": "AWS::Lambda::Version",
                            "codeSha256": undefined,
                            "dependsOn": Set {},
                            "description": undefined,
                            "functionName": "\${Token[TOKEN.90]}",
                            "logicalId": "\${Token[test-stack.my-function-test.CurrentVersion.Resource.LogicalID.93]}",
                            "node": ConstructNode {
                              "_actualNode": Node {
                                "_aspects": Array [],
                                "_children": Object {},
                                "_context": Object {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": Array [
                                  Object {
                                    "data": "\${Token[test-stack.my-function-test.CurrentVersion.Resource.LogicalID.93]}",
                                    "trace": Array [
                                      "new Version (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\lambda-version.ts:187:21)",
                                      "LambdaPowerToolsFunction.get currentVersion [as currentVersion] (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:364:28)",
                                      "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:44:21)",
                                      "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                      "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                      "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                      "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                      "new Promise (<anonymous>)",
                                      "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                      "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                      "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                    ],
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": Array [],
                                "host": [Circular],
                                "id": "Resource",
                                "invokedAspects": Array [],
                                "scope": [Circular],
                              },
                              "host": [Circular],
                            },
                            "provisionedConcurrencyConfig": undefined,
                            "rawOverrides": Object {},
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): Object {
                              "dependencyRoots": Array [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "CurrentVersion",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "permissionsNode": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {
                          "Resource": CfnVersion {
                            "_cfnProperties": Object {
                              "codeSha256": undefined,
                              "description": undefined,
                              "functionName": "\${Token[TOKEN.90]}",
                              "provisionedConcurrencyConfig": undefined,
                            },
                            "_logicalIdOverride": "\${Token[TOKEN.96]}",
                            "attrVersion": "\${Token[TOKEN.94]}",
                            "cfnOptions": Object {},
                            "cfnResourceType": "AWS::Lambda::Version",
                            "codeSha256": undefined,
                            "dependsOn": Set {},
                            "description": undefined,
                            "functionName": "\${Token[TOKEN.90]}",
                            "logicalId": "\${Token[test-stack.my-function-test.CurrentVersion.Resource.LogicalID.93]}",
                            "node": ConstructNode {
                              "_actualNode": Node {
                                "_aspects": Array [],
                                "_children": Object {},
                                "_context": Object {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": Array [
                                  Object {
                                    "data": "\${Token[test-stack.my-function-test.CurrentVersion.Resource.LogicalID.93]}",
                                    "trace": Array [
                                      "new Version (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\lambda-version.ts:187:21)",
                                      "LambdaPowerToolsFunction.get currentVersion [as currentVersion] (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:364:28)",
                                      "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:44:21)",
                                      "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                      "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                      "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                      "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                      "new Promise (<anonymous>)",
                                      "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                      "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                      "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                    ],
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": Array [],
                                "host": [Circular],
                                "id": "Resource",
                                "invokedAspects": Array [],
                                "scope": [Circular],
                              },
                              "host": [Circular],
                            },
                            "provisionedConcurrencyConfig": undefined,
                            "rawOverrides": Object {},
                            "stack": [Circular],
                            Symbol(@aws-cdk/core.DependableTrait): Object {
                              "dependencyRoots": Array [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "CurrentVersion",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "physicalName": "\${Token[TOKEN.92]}",
                    "qualifier": "\${Token[TOKEN.94]}",
                    "stack": [Circular],
                    "version": "\${Token[TOKEN.94]}",
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                  Symbol(@aws-cdk/core.DependableTrait): Object {
                    "dependencyRoots": Array [
                      [Circular],
                    ],
                  },
                },
              },
              "_context": Object {},
              "_dependencies": Set {},
              "_locked": false,
              "_metadata": Array [],
              "_validations": Array [],
              "host": [Circular],
              "id": "my-function-test",
              "invokedAspects": Array [],
              "scope": [Circular],
            },
            "host": [Circular],
          },
          "physicalName": "\${Token[TOKEN.60]}",
          "role": Role {
            "_allowCrossEnvironment": false,
            "_physicalName": undefined,
            "assumeRoleAction": "sts:AssumeRole",
            "assumeRolePolicy": Object {
              "Statement": Array [
                Object {
                  "Action": "sts:AssumeRole",
                  "Effect": "Allow",
                  "Principal": Object {
                    "Service": "\${Token[lambda.amazonaws.com.63]}",
                  },
                },
              ],
              "Version": "2012-10-17",
            },
            "attachedPolicies": AttachedPolicies {
              "policies": Array [
                Policy {
                  "_allowCrossEnvironment": false,
                  "_physicalName": "\${Token[TOKEN.82]}",
                  "_policyName": "\${Token[TOKEN.82]}",
                  "document": Object {
                    "Statement": Array [
                      Object {
                        "Action": Array [
                          "xray:PutTraceSegments",
                          "xray:PutTelemetryRecords",
                        ],
                        "Effect": "Allow",
                        "Resource": "*",
                      },
                    ],
                    "Version": "2012-10-17",
                  },
                  "env": Object {
                    "account": "\${Token[AWS.AccountId.3]}",
                    "region": "\${Token[AWS.Region.7]}",
                  },
                  "force": false,
                  "groups": Array [],
                  "node": ConstructNode {
                    "_actualNode": Node {
                      "_aspects": Array [],
                      "_children": Object {
                        "Resource": CfnPolicyConditional {
                          "_cfnProperties": Object {
                            "groups": Array [
                              "#{Token[TOKEN.85]}",
                            ],
                            "policyDocument": Object {
                              "Statement": Array [
                                Object {
                                  "Action": Array [
                                    "xray:PutTraceSegments",
                                    "xray:PutTelemetryRecords",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "policyName": "\${Token[TOKEN.82]}",
                            "roles": Array [
                              "#{Token[TOKEN.83]}",
                            ],
                            "users": Array [
                              "#{Token[TOKEN.84]}",
                            ],
                          },
                          "cfnOptions": Object {},
                          "cfnResourceType": "AWS::IAM::Policy",
                          "dependsOn": Set {},
                          "groups": Array [
                            "#{Token[TOKEN.85]}",
                          ],
                          "logicalId": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                          "node": ConstructNode {
                            "_actualNode": Node {
                              "_aspects": Array [],
                              "_children": Object {},
                              "_context": Object {},
                              "_dependencies": Set {},
                              "_locked": false,
                              "_metadata": Array [
                                Object {
                                  "data": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                                  "trace": Array [
                                    "new Policy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\policy.ts:154:22)",
                                    "Role.addToPrincipalPolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\role.ts:367:28)",
                                    "LambdaPowerToolsFunction.addToRolePolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function-base.ts:264:15)",
                                    "LambdaPowerToolsFunction.buildTracingConfig (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:983:10)",
                                    "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:664:27)",
                                    "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                                    "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                                    "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                    "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                    "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                    "new Promise (<anonymous>)",
                                    "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                    "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                    "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                  ],
                                  "type": "aws:cdk:logicalId",
                                },
                              ],
                              "_validations": Array [],
                              "host": [Circular],
                              "id": "Resource",
                              "invokedAspects": Array [],
                              "scope": [Circular],
                            },
                            "host": [Circular],
                          },
                          "policyDocument": Object {
                            "Statement": Array [
                              Object {
                                "Action": Array [
                                  "xray:PutTraceSegments",
                                  "xray:PutTelemetryRecords",
                                ],
                                "Effect": "Allow",
                                "Resource": "*",
                              },
                            ],
                            "Version": "2012-10-17",
                          },
                          "policyName": "\${Token[TOKEN.82]}",
                          "rawOverrides": Object {},
                          "roles": Array [
                            "#{Token[TOKEN.83]}",
                          ],
                          "stack": [Circular],
                          "users": Array [
                            "#{Token[TOKEN.84]}",
                          ],
                          Symbol(@aws-cdk/core.DependableTrait): Object {
                            "dependencyRoots": Array [
                              [Circular],
                            ],
                          },
                        },
                      },
                      "_context": Object {},
                      "_dependencies": Set {},
                      "_locked": false,
                      "_metadata": Array [],
                      "_validations": Array [],
                      "host": [Circular],
                      "id": "DefaultPolicy",
                      "invokedAspects": Array [],
                      "scope": [Circular],
                    },
                    "host": [Circular],
                  },
                  "physicalName": "\${Token[TOKEN.82]}",
                  "referenceTaken": false,
                  "roles": Array [
                    [Circular],
                  ],
                  "stack": [Circular],
                  "users": Array [],
                  Symbol(@aws-cdk/core.DependableTrait): Object {
                    "dependencyRoots": Array [
                      [Circular],
                    ],
                  },
                },
              ],
            },
            "defaultPolicy": Policy {
              "_allowCrossEnvironment": false,
              "_physicalName": "\${Token[TOKEN.82]}",
              "_policyName": "\${Token[TOKEN.82]}",
              "document": Object {
                "Statement": Array [
                  Object {
                    "Action": Array [
                      "xray:PutTraceSegments",
                      "xray:PutTelemetryRecords",
                    ],
                    "Effect": "Allow",
                    "Resource": "*",
                  },
                ],
                "Version": "2012-10-17",
              },
              "env": Object {
                "account": "\${Token[AWS.AccountId.3]}",
                "region": "\${Token[AWS.Region.7]}",
              },
              "force": false,
              "groups": Array [],
              "node": ConstructNode {
                "_actualNode": Node {
                  "_aspects": Array [],
                  "_children": Object {
                    "Resource": CfnPolicyConditional {
                      "_cfnProperties": Object {
                        "groups": Array [
                          "#{Token[TOKEN.85]}",
                        ],
                        "policyDocument": Object {
                          "Statement": Array [
                            Object {
                              "Action": Array [
                                "xray:PutTraceSegments",
                                "xray:PutTelemetryRecords",
                              ],
                              "Effect": "Allow",
                              "Resource": "*",
                            },
                          ],
                          "Version": "2012-10-17",
                        },
                        "policyName": "\${Token[TOKEN.82]}",
                        "roles": Array [
                          "#{Token[TOKEN.83]}",
                        ],
                        "users": Array [
                          "#{Token[TOKEN.84]}",
                        ],
                      },
                      "cfnOptions": Object {},
                      "cfnResourceType": "AWS::IAM::Policy",
                      "dependsOn": Set {},
                      "groups": Array [
                        "#{Token[TOKEN.85]}",
                      ],
                      "logicalId": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                      "node": ConstructNode {
                        "_actualNode": Node {
                          "_aspects": Array [],
                          "_children": Object {},
                          "_context": Object {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": Array [
                            Object {
                              "data": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                              "trace": Array [
                                "new Policy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\policy.ts:154:22)",
                                "Role.addToPrincipalPolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\role.ts:367:28)",
                                "LambdaPowerToolsFunction.addToRolePolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function-base.ts:264:15)",
                                "LambdaPowerToolsFunction.buildTracingConfig (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:983:10)",
                                "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:664:27)",
                                "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                                "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                                "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                "new Promise (<anonymous>)",
                                "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                              ],
                              "type": "aws:cdk:logicalId",
                            },
                          ],
                          "_validations": Array [],
                          "host": [Circular],
                          "id": "Resource",
                          "invokedAspects": Array [],
                          "scope": [Circular],
                        },
                        "host": [Circular],
                      },
                      "policyDocument": Object {
                        "Statement": Array [
                          Object {
                            "Action": Array [
                              "xray:PutTraceSegments",
                              "xray:PutTelemetryRecords",
                            ],
                            "Effect": "Allow",
                            "Resource": "*",
                          },
                        ],
                        "Version": "2012-10-17",
                      },
                      "policyName": "\${Token[TOKEN.82]}",
                      "rawOverrides": Object {},
                      "roles": Array [
                        "#{Token[TOKEN.83]}",
                      ],
                      "stack": [Circular],
                      "users": Array [
                        "#{Token[TOKEN.84]}",
                      ],
                      Symbol(@aws-cdk/core.DependableTrait): Object {
                        "dependencyRoots": Array [
                          [Circular],
                        ],
                      },
                    },
                  },
                  "_context": Object {},
                  "_dependencies": Set {},
                  "_locked": false,
                  "_metadata": Array [],
                  "_validations": Array [],
                  "host": [Circular],
                  "id": "DefaultPolicy",
                  "invokedAspects": Array [],
                  "scope": [Circular],
                },
                "host": [Circular],
              },
              "physicalName": "\${Token[TOKEN.82]}",
              "referenceTaken": false,
              "roles": Array [
                [Circular],
              ],
              "stack": [Circular],
              "users": Array [],
              Symbol(@aws-cdk/core.DependableTrait): Object {
                "dependencyRoots": Array [
                  [Circular],
                ],
              },
            },
            "env": Object {
              "account": "\${Token[AWS.AccountId.3]}",
              "region": "\${Token[AWS.Region.7]}",
            },
            "grantPrincipal": [Circular],
            "inlinePolicies": Object {},
            "managedPolicies": Array [
              AwsManagedPolicy {
                "managedPolicyArn": "\${Token[TOKEN.61]}",
              },
            ],
            "node": ConstructNode {
              "_actualNode": Node {
                "_aspects": Array [],
                "_children": Object {
                  "DefaultPolicy": Policy {
                    "_allowCrossEnvironment": false,
                    "_physicalName": "\${Token[TOKEN.82]}",
                    "_policyName": "\${Token[TOKEN.82]}",
                    "document": Object {
                      "Statement": Array [
                        Object {
                          "Action": Array [
                            "xray:PutTraceSegments",
                            "xray:PutTelemetryRecords",
                          ],
                          "Effect": "Allow",
                          "Resource": "*",
                        },
                      ],
                      "Version": "2012-10-17",
                    },
                    "env": Object {
                      "account": "\${Token[AWS.AccountId.3]}",
                      "region": "\${Token[AWS.Region.7]}",
                    },
                    "force": false,
                    "groups": Array [],
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {
                          "Resource": CfnPolicyConditional {
                            "_cfnProperties": Object {
                              "groups": Array [
                                "#{Token[TOKEN.85]}",
                              ],
                              "policyDocument": Object {
                                "Statement": Array [
                                  Object {
                                    "Action": Array [
                                      "xray:PutTraceSegments",
                                      "xray:PutTelemetryRecords",
                                    ],
                                    "Effect": "Allow",
                                    "Resource": "*",
                                  },
                                ],
                                "Version": "2012-10-17",
                              },
                              "policyName": "\${Token[TOKEN.82]}",
                              "roles": Array [
                                "#{Token[TOKEN.83]}",
                              ],
                              "users": Array [
                                "#{Token[TOKEN.84]}",
                              ],
                            },
                            "cfnOptions": Object {},
                            "cfnResourceType": "AWS::IAM::Policy",
                            "dependsOn": Set {},
                            "groups": Array [
                              "#{Token[TOKEN.85]}",
                            ],
                            "logicalId": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                            "node": ConstructNode {
                              "_actualNode": Node {
                                "_aspects": Array [],
                                "_children": Object {},
                                "_context": Object {},
                                "_dependencies": Set {},
                                "_locked": false,
                                "_metadata": Array [
                                  Object {
                                    "data": "\${Token[test-stack.my-function-test.ServiceRole.DefaultPolicy.Resource.LogicalID.86]}",
                                    "trace": Array [
                                      "new Policy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\policy.ts:154:22)",
                                      "Role.addToPrincipalPolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\role.ts:367:28)",
                                      "LambdaPowerToolsFunction.addToRolePolicy (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function-base.ts:264:15)",
                                      "LambdaPowerToolsFunction.buildTracingConfig (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:983:10)",
                                      "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:664:27)",
                                      "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                                      "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                                      "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                      "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                      "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                      "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                      "new Promise (<anonymous>)",
                                      "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                      "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                      "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                                    ],
                                    "type": "aws:cdk:logicalId",
                                  },
                                ],
                                "_validations": Array [],
                                "host": [Circular],
                                "id": "Resource",
                                "invokedAspects": Array [],
                                "scope": [Circular],
                              },
                              "host": [Circular],
                            },
                            "policyDocument": Object {
                              "Statement": Array [
                                Object {
                                  "Action": Array [
                                    "xray:PutTraceSegments",
                                    "xray:PutTelemetryRecords",
                                  ],
                                  "Effect": "Allow",
                                  "Resource": "*",
                                },
                              ],
                              "Version": "2012-10-17",
                            },
                            "policyName": "\${Token[TOKEN.82]}",
                            "rawOverrides": Object {},
                            "roles": Array [
                              "#{Token[TOKEN.83]}",
                            ],
                            "stack": [Circular],
                            "users": Array [
                              "#{Token[TOKEN.84]}",
                            ],
                            Symbol(@aws-cdk/core.DependableTrait): Object {
                              "dependencyRoots": Array [
                                [Circular],
                              ],
                            },
                          },
                        },
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "DefaultPolicy",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "physicalName": "\${Token[TOKEN.82]}",
                    "referenceTaken": false,
                    "roles": Array [
                      [Circular],
                    ],
                    "stack": [Circular],
                    "users": Array [],
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                  "Resource": CfnRole {
                    "_cfnProperties": Object {
                      "assumeRolePolicyDocument": Object {
                        "Statement": Array [
                          Object {
                            "Action": "sts:AssumeRole",
                            "Effect": "Allow",
                            "Principal": Object {
                              "Service": "\${Token[lambda.amazonaws.com.63]}",
                            },
                          },
                        ],
                        "Version": "2012-10-17",
                      },
                      "description": undefined,
                      "managedPolicyArns": Array [
                        "#{Token[TOKEN.64]}",
                      ],
                      "maxSessionDuration": undefined,
                      "path": undefined,
                      "permissionsBoundary": undefined,
                      "policies": undefined,
                      "roleName": "\${Token[TOKEN.62]}",
                    },
                    "assumeRolePolicyDocument": Object {
                      "Statement": Array [
                        Object {
                          "Action": "sts:AssumeRole",
                          "Effect": "Allow",
                          "Principal": Object {
                            "Service": "\${Token[lambda.amazonaws.com.63]}",
                          },
                        },
                      ],
                      "Version": "2012-10-17",
                    },
                    "attrArn": "\${Token[TOKEN.66]}",
                    "attrRoleId": "\${Token[TOKEN.67]}",
                    "cfnOptions": Object {},
                    "cfnResourceType": "AWS::IAM::Role",
                    "dependsOn": Set {},
                    "description": undefined,
                    "logicalId": "\${Token[test-stack.my-function-test.ServiceRole.Resource.LogicalID.65]}",
                    "managedPolicyArns": Array [
                      "#{Token[TOKEN.64]}",
                    ],
                    "maxSessionDuration": undefined,
                    "node": ConstructNode {
                      "_actualNode": Node {
                        "_aspects": Array [],
                        "_children": Object {},
                        "_context": Object {},
                        "_dependencies": Set {},
                        "_locked": false,
                        "_metadata": Array [
                          Object {
                            "data": "\${Token[test-stack.my-function-test.ServiceRole.Resource.LogicalID.65]}",
                            "trace": Array [
                              "new Role (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-iam\\\\lib\\\\role.ts:326:18)",
                              "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:580:31)",
                              "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                              "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                              "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                              "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                              "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                              "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                              "new Promise (<anonymous>)",
                              "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                              "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                              "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                            ],
                            "type": "aws:cdk:logicalId",
                          },
                        ],
                        "_validations": Array [],
                        "host": [Circular],
                        "id": "Resource",
                        "invokedAspects": Array [],
                        "scope": [Circular],
                      },
                      "host": [Circular],
                    },
                    "path": undefined,
                    "permissionsBoundary": undefined,
                    "policies": undefined,
                    "rawOverrides": Object {},
                    "roleName": "\${Token[TOKEN.62]}",
                    "stack": [Circular],
                    "tags": TagManager {
                      "initialTagPriority": 50,
                      "priorities": Map {},
                      "resourceTypeName": "AWS::IAM::Role",
                      "tagFormatter": StandardFormatter {},
                      "tagPropertyName": "tags",
                      "tags": Map {},
                    },
                    Symbol(@aws-cdk/core.DependableTrait): Object {
                      "dependencyRoots": Array [
                        [Circular],
                      ],
                    },
                  },
                },
                "_context": Object {},
                "_dependencies": Set {},
                "_locked": false,
                "_metadata": Array [],
                "_validations": Array [],
                "host": [Circular],
                "id": "ServiceRole",
                "invokedAspects": Array [],
                "scope": [Circular],
              },
              "host": [Circular],
            },
            "permissionsBoundary": undefined,
            "physicalName": "\${Token[TOKEN.62]}",
            "policyFragment": PrincipalPolicyFragment {
              "conditions": Object {},
              "principalJson": Object {
                "AWS": Array [
                  "\${Token[TOKEN.68]}",
                ],
              },
            },
            "principalAccount": "\${Token[AWS.AccountId.3]}",
            "roleArn": "\${Token[TOKEN.68]}",
            "roleId": "\${Token[TOKEN.67]}",
            "roleName": "\${Token[TOKEN.70]}",
            "stack": [Circular],
            Symbol(@aws-cdk/core.DependableTrait): Object {
              "dependencyRoots": Array [
                [Circular],
              ],
            },
          },
          "runtime": Runtime {
            "bundlingDockerImage": "public.ecr.aws/sam/build-python3.8",
            "bundlingImage": "public.ecr.aws/sam/build-python3.8",
            "family": 2,
            "name": "python3.8",
            "supportsCodeGuruProfiling": true,
            "supportsInlineCode": true,
          },
          "stack": [Circular],
          Symbol(@aws-cdk/core.DependableTrait): Object {
            "dependencyRoots": Array [
              [Circular],
            ],
          },
        },
      },
      "_context": Object {},
      "_dependencies": Set {},
      "_locked": false,
      "_metadata": Array [
        Object {
          "data": Object {
            "artifactHashParameter": "\${Token[test-stack.AssetParameters.70071281480332679e8d...524c37e6c429d359b1380ed17ee4902f05.ArtifactHash.LogicalID.73]}",
            "id": "70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05",
            "packaging": "zip",
            "path": "asset.70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05",
            "s3BucketParameter": "\${Token[test-stack.AssetParameters.70071281480332679e8d...9408524c37e6c429d359b1380ed17ee4902f05.S3Bucket.LogicalID.71]}",
            "s3KeyParameter": "\${Token[test-stack.AssetParameters.70071281480332679e8d...524c37e6c429d359b1380ed17ee4902f05.S3VersionKey.LogicalID.72]}",
            "sourceHash": "70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05",
          },
          "trace": Array [
            "ConstructNode.addMetadata (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\construct-compat.ts:451:92)",
            "LegacyStackSynthesizer.doAddFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:171:23)",
            "LegacyStackSynthesizer.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:74:19)",
            "AppStack.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack.ts:663:29)",
            "LegacyStackSynthesizer.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:78:25)",
            "new Asset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-s3-assets\\\\lib\\\\asset.ts:145:40)",
            "AssetCode.bind (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\code.ts:277:20)",
            "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:600:29)",
            "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
            "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
            "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
            "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
            "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
            "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
            "new Promise (<anonymous>)",
            "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
            "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
            "processTicksAndRejections (internal/process/task_queues.js:93:5)",
          ],
          "type": "aws:cdk:asset",
        },
      ],
      "_validations": Array [],
      "host": [Circular],
      "id": "test-stack",
      "invokedAspects": Array [],
      "scope": App {
        "_assemblyBuilder": CloudAssemblyBuilder {
          "artifacts": Object {},
          "assetOutdir": "C:\\\\Users\\\\geyso\\\\AppData\\\\Local\\\\Temp\\\\cdk.outC2WeRE",
          "missing": Array [],
          "outdir": "C:\\\\Users\\\\geyso\\\\AppData\\\\Local\\\\Temp\\\\cdk.outC2WeRE",
          "parentBuilder": undefined,
        },
        "account": undefined,
        "node": ConstructNode {
          "_actualNode": Node {
            "_aspects": Array [],
            "_children": Object {
              "Tree": TreeMetadata {
                "node": ConstructNode {
                  "_actualNode": Node {
                    "_aspects": Array [],
                    "_children": Object {},
                    "_context": Object {},
                    "_dependencies": Set {},
                    "_locked": false,
                    "_metadata": Array [],
                    "_validations": Array [],
                    "host": [Circular],
                    "id": "Tree",
                    "invokedAspects": Array [],
                    "scope": [Circular],
                  },
                  "host": [Circular],
                },
                Symbol(@aws-cdk/core.DependableTrait): Object {
                  "dependencyRoots": Array [
                    [Circular],
                  ],
                },
              },
              "test-stack": [Circular],
            },
            "_context": Object {},
            "_dependencies": Set {},
            "_locked": false,
            "_metadata": Array [],
            "_validations": Array [],
            "host": [Circular],
            "id": "",
            "invokedAspects": Array [],
            "scope": undefined,
          },
          "host": [Circular],
        },
        "parentStage": undefined,
        "region": undefined,
        "stageName": "",
        Symbol(@aws-cdk/core.DependableTrait): Object {
          "dependencyRoots": Array [
            [Circular],
          ],
        },
      },
    },
    "host": [Circular],
  },
  "region": "\${Token[AWS.Region.7]}",
  "synthesizer": LegacyStackSynthesizer {
    "_assetParameters": Construct {
      "node": ConstructNode {
        "_actualNode": Node {
          "_aspects": Array [],
          "_children": Object {
            "70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05": FileAssetParameters {
              "artifactHashParameter": CfnParameter {
                "_allowedPattern": undefined,
                "_allowedValues": undefined,
                "_constraintDescription": undefined,
                "_default": undefined,
                "_description": "Artifact hash for asset \\"70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05\\"",
                "_maxLength": undefined,
                "_maxValue": undefined,
                "_minLength": undefined,
                "_minValue": undefined,
                "_noEcho": undefined,
                "_type": "String",
                "logicalId": "\${Token[test-stack.AssetParameters.70071281480332679e8d...524c37e6c429d359b1380ed17ee4902f05.ArtifactHash.LogicalID.73]}",
                "node": ConstructNode {
                  "_actualNode": Node {
                    "_aspects": Array [],
                    "_children": Object {},
                    "_context": Object {},
                    "_dependencies": Set {},
                    "_locked": false,
                    "_metadata": Array [
                      Object {
                        "data": "\${Token[test-stack.AssetParameters.70071281480332679e8d...524c37e6c429d359b1380ed17ee4902f05.ArtifactHash.LogicalID.73]}",
                        "trace": Array [
                          "new FileAssetParameters (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\private\\\\asset-parameters.ts:26:34)",
                          "LegacyStackSynthesizer.doAddFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:154:16)",
                          "LegacyStackSynthesizer.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:74:19)",
                          "AppStack.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack.ts:663:29)",
                          "LegacyStackSynthesizer.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:78:25)",
                          "new Asset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-s3-assets\\\\lib\\\\asset.ts:145:40)",
                          "AssetCode.bind (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\code.ts:277:20)",
                          "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:600:29)",
                          "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                          "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                          "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                          "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                          "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                          "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                          "new Promise (<anonymous>)",
                          "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                          "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                          "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                        ],
                        "type": "aws:cdk:logicalId",
                      },
                    ],
                    "_validations": Array [],
                    "host": [Circular],
                    "id": "ArtifactHash",
                    "invokedAspects": Array [],
                    "scope": [Circular],
                  },
                  "host": [Circular],
                },
                "stack": [Circular],
                Symbol(@aws-cdk/core.DependableTrait): Object {
                  "dependencyRoots": Array [
                    [Circular],
                  ],
                },
              },
              "bucketNameParameter": CfnParameter {
                "_allowedPattern": undefined,
                "_allowedValues": undefined,
                "_constraintDescription": undefined,
                "_default": undefined,
                "_description": "S3 bucket for asset \\"70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05\\"",
                "_maxLength": undefined,
                "_maxValue": undefined,
                "_minLength": undefined,
                "_minValue": undefined,
                "_noEcho": undefined,
                "_type": "String",
                "logicalId": "\${Token[test-stack.AssetParameters.70071281480332679e8d...9408524c37e6c429d359b1380ed17ee4902f05.S3Bucket.LogicalID.71]}",
                "node": ConstructNode {
                  "_actualNode": Node {
                    "_aspects": Array [],
                    "_children": Object {},
                    "_context": Object {},
                    "_dependencies": Set {},
                    "_locked": false,
                    "_metadata": Array [
                      Object {
                        "data": "\${Token[test-stack.AssetParameters.70071281480332679e8d...9408524c37e6c429d359b1380ed17ee4902f05.S3Bucket.LogicalID.71]}",
                        "trace": Array [
                          "new FileAssetParameters (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\private\\\\asset-parameters.ts:16:32)",
                          "LegacyStackSynthesizer.doAddFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:154:16)",
                          "LegacyStackSynthesizer.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:74:19)",
                          "AppStack.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack.ts:663:29)",
                          "LegacyStackSynthesizer.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:78:25)",
                          "new Asset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-s3-assets\\\\lib\\\\asset.ts:145:40)",
                          "AssetCode.bind (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\code.ts:277:20)",
                          "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:600:29)",
                          "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                          "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                          "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                          "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                          "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                          "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                          "new Promise (<anonymous>)",
                          "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                          "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                          "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                        ],
                        "type": "aws:cdk:logicalId",
                      },
                    ],
                    "_validations": Array [],
                    "host": [Circular],
                    "id": "S3Bucket",
                    "invokedAspects": Array [],
                    "scope": [Circular],
                  },
                  "host": [Circular],
                },
                "stack": [Circular],
                Symbol(@aws-cdk/core.DependableTrait): Object {
                  "dependencyRoots": Array [
                    [Circular],
                  ],
                },
              },
              "node": ConstructNode {
                "_actualNode": Node {
                  "_aspects": Array [],
                  "_children": Object {
                    "ArtifactHash": CfnParameter {
                      "_allowedPattern": undefined,
                      "_allowedValues": undefined,
                      "_constraintDescription": undefined,
                      "_default": undefined,
                      "_description": "Artifact hash for asset \\"70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05\\"",
                      "_maxLength": undefined,
                      "_maxValue": undefined,
                      "_minLength": undefined,
                      "_minValue": undefined,
                      "_noEcho": undefined,
                      "_type": "String",
                      "logicalId": "\${Token[test-stack.AssetParameters.70071281480332679e8d...524c37e6c429d359b1380ed17ee4902f05.ArtifactHash.LogicalID.73]}",
                      "node": ConstructNode {
                        "_actualNode": Node {
                          "_aspects": Array [],
                          "_children": Object {},
                          "_context": Object {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": Array [
                            Object {
                              "data": "\${Token[test-stack.AssetParameters.70071281480332679e8d...524c37e6c429d359b1380ed17ee4902f05.ArtifactHash.LogicalID.73]}",
                              "trace": Array [
                                "new FileAssetParameters (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\private\\\\asset-parameters.ts:26:34)",
                                "LegacyStackSynthesizer.doAddFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:154:16)",
                                "LegacyStackSynthesizer.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:74:19)",
                                "AppStack.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack.ts:663:29)",
                                "LegacyStackSynthesizer.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:78:25)",
                                "new Asset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-s3-assets\\\\lib\\\\asset.ts:145:40)",
                                "AssetCode.bind (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\code.ts:277:20)",
                                "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:600:29)",
                                "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                                "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                                "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                "new Promise (<anonymous>)",
                                "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                              ],
                              "type": "aws:cdk:logicalId",
                            },
                          ],
                          "_validations": Array [],
                          "host": [Circular],
                          "id": "ArtifactHash",
                          "invokedAspects": Array [],
                          "scope": [Circular],
                        },
                        "host": [Circular],
                      },
                      "stack": [Circular],
                      Symbol(@aws-cdk/core.DependableTrait): Object {
                        "dependencyRoots": Array [
                          [Circular],
                        ],
                      },
                    },
                    "S3Bucket": CfnParameter {
                      "_allowedPattern": undefined,
                      "_allowedValues": undefined,
                      "_constraintDescription": undefined,
                      "_default": undefined,
                      "_description": "S3 bucket for asset \\"70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05\\"",
                      "_maxLength": undefined,
                      "_maxValue": undefined,
                      "_minLength": undefined,
                      "_minValue": undefined,
                      "_noEcho": undefined,
                      "_type": "String",
                      "logicalId": "\${Token[test-stack.AssetParameters.70071281480332679e8d...9408524c37e6c429d359b1380ed17ee4902f05.S3Bucket.LogicalID.71]}",
                      "node": ConstructNode {
                        "_actualNode": Node {
                          "_aspects": Array [],
                          "_children": Object {},
                          "_context": Object {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": Array [
                            Object {
                              "data": "\${Token[test-stack.AssetParameters.70071281480332679e8d...9408524c37e6c429d359b1380ed17ee4902f05.S3Bucket.LogicalID.71]}",
                              "trace": Array [
                                "new FileAssetParameters (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\private\\\\asset-parameters.ts:16:32)",
                                "LegacyStackSynthesizer.doAddFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:154:16)",
                                "LegacyStackSynthesizer.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:74:19)",
                                "AppStack.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack.ts:663:29)",
                                "LegacyStackSynthesizer.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:78:25)",
                                "new Asset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-s3-assets\\\\lib\\\\asset.ts:145:40)",
                                "AssetCode.bind (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\code.ts:277:20)",
                                "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:600:29)",
                                "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                                "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                                "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                "new Promise (<anonymous>)",
                                "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                              ],
                              "type": "aws:cdk:logicalId",
                            },
                          ],
                          "_validations": Array [],
                          "host": [Circular],
                          "id": "S3Bucket",
                          "invokedAspects": Array [],
                          "scope": [Circular],
                        },
                        "host": [Circular],
                      },
                      "stack": [Circular],
                      Symbol(@aws-cdk/core.DependableTrait): Object {
                        "dependencyRoots": Array [
                          [Circular],
                        ],
                      },
                    },
                    "S3VersionKey": CfnParameter {
                      "_allowedPattern": undefined,
                      "_allowedValues": undefined,
                      "_constraintDescription": undefined,
                      "_default": undefined,
                      "_description": "S3 key for asset version \\"70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05\\"",
                      "_maxLength": undefined,
                      "_maxValue": undefined,
                      "_minLength": undefined,
                      "_minValue": undefined,
                      "_noEcho": undefined,
                      "_type": "String",
                      "logicalId": "\${Token[test-stack.AssetParameters.70071281480332679e8d...524c37e6c429d359b1380ed17ee4902f05.S3VersionKey.LogicalID.72]}",
                      "node": ConstructNode {
                        "_actualNode": Node {
                          "_aspects": Array [],
                          "_children": Object {},
                          "_context": Object {},
                          "_dependencies": Set {},
                          "_locked": false,
                          "_metadata": Array [
                            Object {
                              "data": "\${Token[test-stack.AssetParameters.70071281480332679e8d...524c37e6c429d359b1380ed17ee4902f05.S3VersionKey.LogicalID.72]}",
                              "trace": Array [
                                "new FileAssetParameters (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\private\\\\asset-parameters.ts:21:31)",
                                "LegacyStackSynthesizer.doAddFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:154:16)",
                                "LegacyStackSynthesizer.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:74:19)",
                                "AppStack.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack.ts:663:29)",
                                "LegacyStackSynthesizer.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:78:25)",
                                "new Asset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-s3-assets\\\\lib\\\\asset.ts:145:40)",
                                "AssetCode.bind (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\code.ts:277:20)",
                                "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:600:29)",
                                "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                                "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                                "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                                "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                                "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                                "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                                "new Promise (<anonymous>)",
                                "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                                "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                                "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                              ],
                              "type": "aws:cdk:logicalId",
                            },
                          ],
                          "_validations": Array [],
                          "host": [Circular],
                          "id": "S3VersionKey",
                          "invokedAspects": Array [],
                          "scope": [Circular],
                        },
                        "host": [Circular],
                      },
                      "stack": [Circular],
                      Symbol(@aws-cdk/core.DependableTrait): Object {
                        "dependencyRoots": Array [
                          [Circular],
                        ],
                      },
                    },
                  },
                  "_context": Object {},
                  "_dependencies": Set {},
                  "_locked": false,
                  "_metadata": Array [],
                  "_validations": Array [],
                  "host": [Circular],
                  "id": "70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05",
                  "invokedAspects": Array [],
                  "scope": [Circular],
                },
                "host": [Circular],
              },
              "objectKeyParameter": CfnParameter {
                "_allowedPattern": undefined,
                "_allowedValues": undefined,
                "_constraintDescription": undefined,
                "_default": undefined,
                "_description": "S3 key for asset version \\"70071281480332679e8d2de89f9408524c37e6c429d359b1380ed17ee4902f05\\"",
                "_maxLength": undefined,
                "_maxValue": undefined,
                "_minLength": undefined,
                "_minValue": undefined,
                "_noEcho": undefined,
                "_type": "String",
                "logicalId": "\${Token[test-stack.AssetParameters.70071281480332679e8d...524c37e6c429d359b1380ed17ee4902f05.S3VersionKey.LogicalID.72]}",
                "node": ConstructNode {
                  "_actualNode": Node {
                    "_aspects": Array [],
                    "_children": Object {},
                    "_context": Object {},
                    "_dependencies": Set {},
                    "_locked": false,
                    "_metadata": Array [
                      Object {
                        "data": "\${Token[test-stack.AssetParameters.70071281480332679e8d...524c37e6c429d359b1380ed17ee4902f05.S3VersionKey.LogicalID.72]}",
                        "trace": Array [
                          "new FileAssetParameters (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\private\\\\asset-parameters.ts:21:31)",
                          "LegacyStackSynthesizer.doAddFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:154:16)",
                          "LegacyStackSynthesizer.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:74:19)",
                          "AppStack.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack.ts:663:29)",
                          "LegacyStackSynthesizer.addFileAsset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\core\\\\lib\\\\stack-synthesizers\\\\legacy.ts:78:25)",
                          "new Asset (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-s3-assets\\\\lib\\\\asset.ts:145:40)",
                          "AssetCode.bind (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\code.ts:277:20)",
                          "new Function (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda\\\\lib\\\\function.ts:600:29)",
                          "new PythonFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\@aws-cdk\\\\aws-lambda-python\\\\lib\\\\function.ts:106:5)",
                          "new LambdaPowerToolsFunction (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\src\\\\lambda-power-tools.ts:39:5)",
                          "new AppStack (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\stack\\\\app-stack.ts:11:5)",
                          "Object.<anonymous> (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\test\\\\pipeline.test.ts:15:13)",
                          "Object.asyncJestLifecycle (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\jasmineAsyncInstall.js:58:37)",
                          "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:45:12",
                          "new Promise (<anonymous>)",
                          "mapper (C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:28:19)",
                          "C:\\\\DRUID-LIBS\\\\druid-aws-cdk-packages\\\\node_modules\\\\jest-jasmine2\\\\build\\\\queueRunner.js:75:41",
                          "processTicksAndRejections (internal/process/task_queues.js:93:5)",
                        ],
                        "type": "aws:cdk:logicalId",
                      },
                    ],
                    "_validations": Array [],
                    "host": [Circular],
                    "id": "S3VersionKey",
                    "invokedAspects": Array [],
                    "scope": [Circular],
                  },
                  "host": [Circular],
                },
                "stack": [Circular],
                Symbol(@aws-cdk/core.DependableTrait): Object {
                  "dependencyRoots": Array [
                    [Circular],
                  ],
                },
              },
              Symbol(@aws-cdk/core.DependableTrait): Object {
                "dependencyRoots": Array [
                  [Circular],
                ],
              },
            },
          },
          "_context": Object {},
          "_dependencies": Set {},
          "_locked": false,
          "_metadata": Array [],
          "_validations": Array [],
          "host": [Circular],
          "id": "AssetParameters",
          "invokedAspects": Array [],
          "scope": [Circular],
        },
        "host": [Circular],
      },
      Symbol(@aws-cdk/core.DependableTrait): Object {
        "dependencyRoots": Array [
          [Circular],
        ],
      },
    },
    "addedImageAssets": Set {},
    "cycle": false,
    "stack": [Circular],
  },
  "tags": TagManager {
    "initialTagPriority": 50,
    "priorities": Map {},
    "resourceTypeName": "aws:cdk:stack",
    "tagFormatter": KeyValueFormatter {},
    "tagPropertyName": "tags",
    "tags": Map {},
  },
  "templateFile": "test-stack.template.json",
  "templateOptions": Object {},
  "terminationProtection": undefined,
  Symbol(@aws-cdk/core.DependableTrait): Object {
    "dependencyRoots": Array [
      [Circular],
    ],
  },
}
`;
